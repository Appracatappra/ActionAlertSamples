<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActionComponents</name>
    </assembly>
    <members>
        <member name="T:ActionComponents.ACNavBar">
            <summary>
            A left-side, icon based, customizable navigation strip and view controller
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACNavBar"/> has three <see cref="T:ActionComponents.ACNavBarButtonCollection"/>s (top, middle and bottom) that
            <see cref="T:ActionComponents.ACNavBarButton"/>s can be added to. Several different <see cref="T:ActionComponents.ACNavBarButtonType"/>s can be created that provide
            automatic control of attached <c>UIView</c>s to simple touchable buttons to notification icons. The <see cref="T:ActionComponents.ACNavBar"/> appearance
            can be adjusted using <see cref="T:ActionComponents.ACNavBarAppearance"/> and <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> properties. </remarks>
        </member>
        <member name="F:ActionComponents.ACNavBar.tag">
            <summary>
            [OPTIONAL] Tag to hold user information about this collection
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBar.Appearance">
            <summary>
            Controlls the general appearance of the control
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBar.ButtonAppearanceEnabled">
            <summary>
            Gets or sets the button appearance enabled values
            </summary>
            <value>The button appearance enabled values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButtonCollection"/>s and 
            all <see cref="T:ActionComponents.ACNavBarButton"/>s in those collections.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.ButtonAppearanceDisabled">
            <summary>
            Gets or sets the button appearance disabled values
            </summary>
            <value>The button appearance disabled values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButtonCollection"/>s and 
            all <see cref="T:ActionComponents.ACNavBarButton"/>s in those collections.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.ButtonAppearanceSelected">
            <summary>
            Gets or sets the button appearance selected values
            </summary>
            <value>The button appearance selected values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButtonCollection"/>s and 
            all <see cref="T:ActionComponents.ACNavBarButton"/>s in those collections.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.Top">
            <summary>
            Gets the top <see cref="T:ActionComponents.ACNavBarButtonCollection"/> of <see cref="T:ActionComponents.ACNavBarButton"/>s
            </summary>
            <value>The top collection</value>
            <remarks>This is the master <see cref="T:ActionComponents.ACNavBarButtonCollection"/>. The first button added to this collection will
            automatically be the selected button. Its <c>UIView</c> will be displayed and the <see cref="T:ActionComponents.ACNavBarPointer"/> will be
            moved into position beside this button. NOTE: You need to call the <c>DisplayDefaultView</c> method of the <see cref="T:ActionComponents.ACNavBar"/> to cause the 
            first view to be correctly displayed after the NavBar has been populated with buttons.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.Middle">
            <summary>
            Gets the middle <see cref="T:ActionComponents.ACNavBarButtonCollection"/> of <see cref="T:ActionComponents.ACNavBarButton"/>s 
            </summary>
            <value>The middle collection</value>
            <remarks>The middle <see cref="T:ActionComponents.ACNavBarButtonCollection"/> is usually reserved for <c>Tool</c> <see cref="T:ActionComponents.ACNavBarButtonType"/>s of
            buttons that act on the currently selected <c>UIView</c> </remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.Bottom">
            <summary>
            Gets the bottom <see cref="T:ActionComponents.ACNavBarButtonCollection"/> of <see cref="T:ActionComponents.ACNavBarButton"/>s 
            </summary>
            <value>The bottom collection</value>
            <remarks>The bottom <see cref="T:ActionComponents.ACNavBarButtonCollection"/> is usually reserved for <c>Settings</c> and <c>Notification</c>
            <see cref="T:ActionComponents.ACNavBarButtonType"/>s of buttons.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBar.PointerHidden">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACNavBar"/> pointer is hidden.
            </summary>
            <value><c>true</c> if pointer hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACNavBar.SuspendUpdates">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACNavBar"/> has suspend updates.
            </summary>
            <value><c>true</c> if suspend updates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACNavBar.SelectedButton">
            <summary>
            Gets or sets the selected button.
            </summary>
            <value>The selected button.</value>
        </member>
        <member name="M:ActionComponents.ACNavBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBar"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBar.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBar"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBar"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBar"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBar"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBar.CascadeAppearanceChanges(ActionComponents.ACNavBarButtonAppearance,ActionComponents.ACNavBarButtonState)">
            <summary>
            Cascades the given appearance changes to button in all groups (Top, Middle, Bottom) for the given state.
            </summary>
            <param name="appearance">The new apparance.</param>
            <param name="state">The state that's being changed.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.MovePointer(System.nfloat)">
            <summary>
            Moves the pointer.
            </summary>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.Draw(CoreGraphics.CGRect)">
            <summary>
            Draw the specified rect.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACNavBar.LayoutSubviews">
            <summary>
            Layouts the subviews.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarAppearance">
            <summary>
            Controls the appearance of a <see cref="T:ActionComponents.ACNavBar"/> with properties such as 
            background color, border color, and shadow color
            </summary>
            <remarks>The <c>border</c> property also controls the color of the <see cref="T:ActionComponents.ACNavBarPointer"/>  </remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarAppearance.Background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACNavBarAppearance.Border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACNavBarAppearance.Shadow">
            <summary>
            Gets or sets the shadow color
            </summary>
            <value>The shadow color</value>
        </member>
        <member name="P:ActionComponents.ACNavBarAppearance.Flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACNavBarAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 design language</remarks>
        </member>
        <member name="M:ActionComponents.ACNavBarAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarAppearance"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarAppearance.#ctor(UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarAppearance"/> class.
            </summary>
            <param name="background">Background.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarAppearance"/> class.
            </summary>
            <param name="background">Background.</param>
            <param name="border">Border.</param>
            <param name="shadow">Shadow.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarAppearance.#ctor(ActionComponents.ACNavBarAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarAppearance"/> class.
            </summary>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarAppearance.Clone">
            <summary>
            Clone this instance.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="E:ActionComponents.ACNavBarAppearance.AppearanceModified">
            <summary>
            Occurs when appearance modified.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarButton">
            <summary>
            Defines a button that can be added to a <see cref="T:ActionComponents.ACNavBar"/> of a given <see cref="T:ActionComponents.ACNavBarButtonType"/> and
            <see cref="T:ActionComponents.ACNavBarButtonState"/>. Three <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> properties controll the look and
            feel of the button when it is Enabled, Disabled or Selected. 
            </summary>
            <remarks><see cref="T:ActionComponents.ACNavBarButton"/>s cannot be created directly but are built by methods of the <see cref="T:ActionComponents.ACNavBarButtonCollection"/> 
            as <c>AddButton</c>, <c>AddAutoDisposingButton</c>, <c>AddTool</c> or <c>AddNotification</c> </remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.Tag">
            <summary>
            [OPTIONAL] object that can be attached to this <see cref="T:ActionComponents.ACNavBarButton"/> 
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.Group">
            <summary>
            Gets or sets the group this button belongs to.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.StoryboardName">
            <summary>
            Gets or sets the name of the storyboard to load the view from.
            </summary>
            <value>The name of the storyboard.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.ViewName">
            <summary>
            Gets or sets the name of the view to load from a storyboard.
            </summary>
            <value>The name of the view.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.AppearanceEnabled">
            <summary>
            Controls the appearance of the <see cref="T:ActionComponents.ACNavBarButton"/> when it is the <c>Enabled</c> state 
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.AppearanceDisabled">
            <summary>
            Controls the appearance of the <see cref="T:ActionComponents.ACNavBarButton"/> when it is in the <c>Disabled</c> state 
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.AppearanceSelected">
            <summary>
            Controls the appearance of the <see cref="T:ActionComponents.ACNavBarButton"/> when it is in the <c>Selected</c> state
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.State">
            <summary>
            Gets the current state of the button
            </summary>
            <value>The button's state</value>
            <remarks>You cannot set a button's state directly, it's set in response to events in the parent <see cref="T:ActionComponents.ACNavBar"/> </remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.Type">
            <summary>
            Returns the type of this <see cref="T:ActionComponents.ACNavBarButton"/>
            </summary>
            <value>The <see cref="T:ActionComponents.ACNavBarButtonType"/> type</value>
            <remarks>You cannot set a button's type directly, it's set based on which method of the <see cref="T:ActionComponents.ACNavBarButtonCollection"/>
            was used to create it: <c>AddButton</c>, <c>AddAutoDisposingButton</c>, <c>AddTool</c> or <c>AddNotification</c></remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.AttachedViewController">
            <summary>
            Gets or sets the attached view controller.
            </summary>
            <value>The attached view controller.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.AttachedView">
            <summary>
            Gets or sets the <c>UIView</c>  being controlled by this <see cref="T:ActionComponents.ACNavBarButton"/>
            </summary>
            <value>The view.</value>
            <remarks>WARNING! This property should ONLY be set in response to a <c>RequestNewView</c> event on this <see cref="T:ActionComponents.ACNavBarButton"/>. 
            Setting the view outside of the event can cause undetermined behavior in the parent <see cref="T:ActionComponents.ACNavBar"/> and display issues!</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACNavBarButton"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            <remarks>WARNING! You cannot disable the currently selected <see cref="T:ActionComponents.ACNavBarButton"/> </remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButton.IsHidden">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACNavBarButton"/> is hidden.
            </summary>
            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>
            <remarks>WARNING! You cannot hide the currently selected <see cref="T:ActionComponents.ACNavBarButton"/> </remarks>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(UIKit.UIImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="imageName">Image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(ActionComponents.ACNavBarButtonType,UIKit.UIImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(ActionComponents.ACNavBarButtonType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="imageName">Image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(UIKit.UIImage,ActionComponents.ACNavBarButtonState)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="image">Image.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(System.String,ActionComponents.ACNavBarButtonState)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="imageName">Image name.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(ActionComponents.ACNavBarButtonType,UIKit.UIImage,ActionComponents.ACNavBarButtonState)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="image">Image.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.#ctor(ActionComponents.ACNavBarButtonType,System.String,ActionComponents.ACNavBarButtonState)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButton"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="imageName">Image name.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.Initialize(UIKit.UIImage)">
            <summary>
            Initialize the specified image.
            </summary>
            <returns>The initialize.</returns>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.MoveTo(System.nfloat,System.nfloat)">
            <summary>
            Moves button view to the given location
            </summary>
            <param name="x">
            The new x position
            </param>
            <param name="y">
            The new y position
            </param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.ButtonUnselected">
            <summary>
            Called when a button is unselected.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.AnimationCompleted">
            <summary>
            Handles the removal of the view from memory afer an automatic dispose happens
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.Invoke">
            <summary>
            Performs the action for the button when tapped by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.Draw(CoreGraphics.CGRect)">
            <summary>
            Draws the button's GUI within the given rect
            </summary>
            <param name="rect">Rect specifying the button's bounds</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButton.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="E:ActionComponents.ACNavBarButton.Touched">
            <summary>
            Occurs when touched.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButton.RequestNewView">
            <summary>
            Occurs when request new view.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButton.ViewHidden">
            <summary>
            Occurs when view hidden.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButton.ViewDisposed">
            <summary>
            Occurs when view disposed.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButton.StateChanged">
            <summary>
            Occurs when state changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarButtonAppearance">
            <summary>
            Defines the appearance of a <see cref="T:ActionComponents.ACNavBarButton"/> 
            </summary>
            <remarks>Changes to the default <see cref="T:ActionComponents.ACNavBarButtonAppearance"/>s in the parent <see cref="T:ActionComponents.ACNavBar"/> and
            and <see cref="T:ActionComponents.ACNavBarButtonCollection"/>s will cascade down to lower levels.</remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonAppearance.Background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonAppearance.Border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonAppearance.Image">
            <summary>
            Gets or sets the image displayed on the button
            </summary>
            <value>The image</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonAppearance.Alpha">
            <summary>
            Gets or sets the alpha that the image is displayed at
            </summary>
            <value>The alpha.</value>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor(UIKit.UIImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
            <param name="imageName">Image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,UIKit.UIImage,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
            <param name="background">Background.</param>
            <param name="border">Border.</param>
            <param name="image">Image.</param>
            <param name="alpha">Alpha.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
            <param name="background">Background.</param>
            <param name="border">Border.</param>
            <param name="imageName">Image name.</param>
            <param name="alpha">Alpha.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.#ctor(ActionComponents.ACNavBarButtonAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonAppearance"/> class.
            </summary>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.Clone">
            <summary>
            Clone this instance.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.CopyAppearance(ActionComponents.ACNavBarButtonAppearance,System.Boolean)">
            <summary>
            Copies the appearance into this appearance.
            </summary>
            <param name="appearance">Appearance.</param>
            <param name="triggerAppearanceModified">If set to <c>true</c> trigger appearance modified.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonAppearance.SetImage(System.String)">
            <summary>
            Sets the image.
            </summary>
            <param name="imageName">Image name.</param>
        </member>
        <member name="E:ActionComponents.ACNavBarButtonAppearance.AppearanceModified">
            <summary>
            Occurs when appearance modified.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarButtonCollection">
            <summary>
            This collection holds all buttons within a given section (top, middle or bottom) of a <see cref="T:ActionComponents.ACNavBar"/> 
            and has properties to control the appearance of new <see cref="T:ActionComponents.ACNavBarButton"/>s added to the collection. 
            </summary>
            <remarks><see cref="T:ActionComponents.ACNavBarButtonCollection"/>s can not be directly created but can be interacted with via the
            parent containing <see cref="T:ActionComponents.ACNavBar"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonCollection.tag">
            <summary>
            [OPTIONAL] Tag to hold user information about this collection.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonCollection._position">
            <summary>
            The position in the enumeration list.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.MoveNext">
            <summary>
            Moves to the next item.
            </summary>
            <returns><c>true</c>, if next was moved, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.Reset">
            <summary>
            Reset the enumeration to zero
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.Current">
            <summary>
            Gets the current item in the enumeration.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACNavBarButton"/> at the specified index.
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.Count">
            <summary>
            Gets the count of buttons in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.ButtonAppearanceEnabled">
            <summary>
            Gets or sets the button appearance enabled values
            </summary>
            <value>The button appearance enabled values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButton"/>s in this 
            <see cref="T:ActionComponents.ACNavBarButtonCollection"/></remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.ButtonAppearanceDisabled">
            <summary>
            Gets or sets the button appearance disabled values
            </summary>
            <value>The button appearance disabled values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButton"/>s in this 
            <see cref="T:ActionComponents.ACNavBarButtonCollection"/></remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.ButtonAppearanceSelected">
            <summary>
            Gets or sets the button appearance selected values
            </summary>
            <value>The button appearance selected values</value>
            <remarks>Any changes to this appearance will cascade to all <see cref="T:ActionComponents.ACNavBarButton"/>s in this 
            <see cref="T:ActionComponents.ACNavBarButtonCollection"/></remarks>
        </member>
        <member name="P:ActionComponents.ACNavBarButtonCollection.SuspendUpdates">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACNavBarButtonCollection"/> has suspend updates.
            </summary>
            <value><c>true</c> if suspend updates; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.#ctor(ActionComponents.ACNavBar,System.nfloat)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarButtonCollection"/> class.
            </summary>
            <param name="parent">Parent.</param>
            <param name="top">Top.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.MoveTo(System.nfloat,System.nfloat)">
            <summary>
            Moves the group to the given location in the Nav Bar.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.RepositionPointer">
            <summary>
            Repositions the pointer after the group has been moved.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.CascadeAppearanceChanges(ActionComponents.ACNavBarButtonAppearance,ActionComponents.ACNavBarButtonState)">
            <summary>
            Cascades the appearance changes to every button in the group for the given button state.
            </summary>
            <param name="appearance">Appearance.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.RequestNewPointerPosition(System.nfloat)">
            <summary>
            Requests the new pointer position.
            </summary>
            <param name="buttonAt">Button at.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.SetButtonAppearanceDefaults(ActionComponents.ACNavBarButton)">
            <summary>
            Sets the button appearance defaults.
            </summary>
            <param name="button">Button.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(UIKit.UIImage,System.Boolean)">
            <summary>
            Adds a view with the given image and auto dispose state.
            </summary>
            <returns>The view.</returns>
            <param name="image">Image.</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.SelectedForGroup(System.String)">
            <summary>
            Returns the button currently selected in a group of buttons.
            </summary>
            <returns>The selected button.</returns>
            <param name="group">Group to search for.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(System.String,System.Boolean)">
            <summary>
            Adds a view with the given image filename and auto disposing state.
            </summary>
            <returns>The view.</returns>
            <param name="imageName">Image name.</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(UIKit.UIImage,System.String,System.Boolean)">
            <summary>
            Adds a view with the given image, view name and auto disposing state.
            </summary>
            <returns>The view.</returns>
            <param name="image">Image.</param>
            <param name="viewName">The name of the view to load from the storyboard when the button is selected.</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(System.String,System.String,System.Boolean)">
            <summary>
            Adds a view with the given image filename, view name and auto disposing state.
            </summary>
            <returns>The view.</returns>
            <param name="imageName">Image name.</param>
            <param name="viewName">The name of the view to load from the storyboard when the button is selected..</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(UIKit.UIImage,System.String,System.String,System.Boolean)">
            <summary>
            Adds a view with the given image, storyboard name, view name and auto disposing state.
            </summary>
            <returns>The view.</returns>
            <param name="image">Image.</param>
            <param name="storyboardName">The name of the storyboard to load the view from.</param>
            <param name="viewName">The name of the view to load from the storyboard when the button is selected.</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddView(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds a view with the given image filename, storyboard name, view name and auto disposing state.
            </summary>
            <returns>The view.</returns>
            <param name="imageName">Image name.</param>
            <param name="storyboardName">The name of the storyboard to load the view from.</param>
            <param name="viewName">The name of the view to load from the storyboard when the button is selected.</param>
            <param name="autoDispose">If set to <c>true</c> auto dispose.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddTool(UIKit.UIImage)">
            <summary>
            Adds a tool to the bar with the given image
            </summary>
            <returns>The tool.</returns>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddTool(System.String)">
            <summary>
            Adds a tool to the bar with the given image filename.
            </summary>
            <returns>The tool.</returns>
            <param name="imageName">Image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddTool(UIKit.UIImage,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds a tool to the bar with the given image and action.
            </summary>
            <returns>The tool.</returns>
            <param name="image">Image.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddTool(System.String,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds a tool to the bar with the given image filename and action.
            </summary>
            <returns>The tool.</returns>
            <param name="imageName">Image name.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,UIKit.UIImage)">
            <summary>
            Adds a selection to the given group with the given image
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,System.String)">
            <summary>
            Adds a selection to the group with the given image filename.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="imageName">Image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,UIKit.UIImage,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds a selection to the given group with the given image and action.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="image">Image.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,System.String,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds a selection to the given group with the given image filename and action.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="imageName">Image name.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,UIKit.UIImage,UIKit.UIImage)">
            <summary>
            Adds a selection with the given group with the image and selected image.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="image">Image.</param>
            <param name="selectedImage">Selected image.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,System.String,System.String)">
            <summary>
            Adds a selection to the given group with the image filename and selected image filename.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="imageName">Image name.</param>
            <param name="selectedImageName">Selected image name.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,UIKit.UIImage,UIKit.UIImage,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds a selection to the given group with the image, selected image and action.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="image">Image.</param>
            <param name="selectedImage">Selected image.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AddSelection(System.String,System.String,System.String,ActionComponents.ACNavBarButtonActionDelegate)">
            <summary>
            Adds the selection to the given group with the image filename, selected image filename and action.
            </summary>
            <returns>The selection.</returns>
            <param name="group">Group.</param>
            <param name="imageName">Image name.</param>
            <param name="selectedImageName">Selected image name.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.Add(ActionComponents.ACNavBarButton)">
            <summary>
            Adds the given Nav Bar Button to the collection.
            </summary>
            <returns>The add.</returns>
            <param name="button">Button.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.Remove(ActionComponents.ACNavBarButton)">
            <summary>
            Remove the specified button from the collection.
            </summary>
            <param name="button">The button to remove.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the button at the given location from the collection.
            </summary>
            <param name="n">The location to remove the button from.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.Clear">
            <summary>
            Removes all buttons from the collection.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarButtonCollection.AdjustContainerHeight">
            <summary>
            Adjusts the height of the container.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButtonCollection.CollectionModified">
            <summary>
            Occurs when collection modified.
            </summary>
        </member>
        <member name="E:ActionComponents.ACNavBarButtonCollection.PointerPositionChanged">
            <summary>
            Occurs when pointer position changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarButtonState">
            <summary>
            Sets the state of a Nav Bar Button.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonState.Enabled">
            <summary>
            The button is enabled.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonState.Disabled">
            <summary>
            The button is disabled.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonState.Hidden">
            <summary>
            The button is hidden.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonState.Selected">
            <summary>
            The button is selected.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonState.GroupSelected">
            <summary>
            The button is part of a selection group and is the currently selected button in the group.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarButtonType">
            <summary>
            Defines the type of a Nav Bar Button.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonType.View">
            <summary>
            The button loads the attached view when it is selected.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonType.AutoDisposingView">
            <summary>
            The button loads the attached view when it is selected and automatically disposes of the view from memory
            when the button is unselected.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonType.Tool">
            <summary>
            The button is a tool that performs an action when pressed.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonType.Selection">
            <summary>
            The button is part of a selection group. Only one item in the group can be selected at any time.
            </summary>
        </member>
        <member name="F:ActionComponents.ACNavBarButtonType.Notification">
            <summary>
            The button is a notification displayed to the user.
            </summary>
        </member>
        <member name="T:ActionComponents.ACNavBarPointer">
            <summary>
            The arrow pointer that is optionally displayed by the selected <see cref="T:ActionComponents.ACNavBarButton"/> of a
            <see cref="T:ActionComponents.ACNavBar"/> 
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACNavBarPointer"/> is controlled by its parent <see cref="T:ActionComponents.ACNavBar"/> and
            should not be modified direction</remarks>
        </member>
        <member name="F:ActionComponents.ACNavBarPointer._appearance">
            <summary>
            Controlls the general appearance of the control
            </summary>
        </member>
        <member name="P:ActionComponents.ACNavBarPointer.Appearance">
            <summary>
            Gets or sets the appearance of the pointer.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(ActionComponents.ACNavBarAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.#ctor(ActionComponents.ACNavBarAppearance,CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACNavBarPointer"/> class.
            </summary>
            <param name="appearance">Appearance.</param>
            <param name="frame">Frame.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.MoveTo(System.nfloat,System.nfloat)">
            <summary>
            Moves the pointer to the given location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACNavBarPointer.Draw(CoreGraphics.CGRect)">
            <summary>
            Draws the pointer onscreen.
            </summary>
            <returns>The draw.</returns>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,System.Single,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.MakeText(System.String,ActionComponents.ACToastLength,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,System.Single,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.ShowText(System.String,ActionComponents.ACToastLength,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Creates a new instance of the <see cref="T:ActionComponents.ACToast"/> message with the given
            properties and returns it
            </summary>
            <returns>The text.</returns>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="P:ActionComponents.ACToast.duration">
            <summary>
            Gets or sets the duration in seconds that this <see cref="T:ActionComponents.ACToast"/> message will be displayed.
            </summary>
            <value>The duration.</value>
            <remarks>Set the duration to zero (0) to display the message forever until dismissed by the user or programmatically. This provides an alternative to
            setting the <c>length</c> property to a <see cref="T:ActionComponents.ACToastLength"/>.</remarks>
        </member>
        <member name="P:ActionComponents.ACToast.length">
            <summary>
            Gets or sets the length that the <see cref="T:ActionComponents.ACToast"/> message will be displayed
            </summary>
            <value>The length.</value>
            <remarks>This provides an alternative to setting the <c>duration</c> in seconds</remarks>
        </member>
        <member name="P:ActionComponents.ACToast.fadeInDuration">
            <summary>
            Gets or sets the duration of the fade in animation for this <see cref="T:ActionComponents.ACToast"/> message
            </summary>
            <value>The duration of the fade in.</value>
        </member>
        <member name="P:ActionComponents.ACToast.fadeOutDuration">
            <summary>
            Gets or sets the duration of the fade out animation for this <see cref="T:ActionComponents.ACToast"/> message
            </summary>
            <value>The duration of the fade in.</value>
        </member>
        <member name="P:ActionComponents.ACToast.gravity">
            <summary>
            Gets or sets the gravity for this <see cref="T:ActionComponents.ACToast"/> message 
            </summary>
            <value>The gravity.</value>
        </member>
        <member name="P:ActionComponents.ACToast.appearance">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACToastAppearance"/> for this
            <see cref="T:ActionComponents.ACToast"/> message
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="P:ActionComponents.ACToast.text">
            <summary>
            Gets or sets the text displayed in this <see cref="T:ActionComponents.ACToast"/> message 
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActionComponents.ACToast.view">
            <summary>
            Gets the view controlled by this <see cref="T:ActionComponents.ACToast"/> message
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:ActionComponents.ACToast.position">
            <summary>
            Gets or sets the position this <see cref="T:ActionComponents.ACToast"/> message will be
            displayed at
            </summary>
            <value>The position.</value>
            <remarks>The <c>position</c> property is only honored if the <see cref="T:ActionComponents.ACToastGravity"/> is set to
            <c>Custom</c> </remarks>
        </member>
        <member name="P:ActionComponents.ACToast.offset">
            <summary>
            Gets or sets the offset that can be applied to the <c>position</c> automatically calculated for this <see cref="T:ActionComponents.ACToast"/>
            based on the selected <see cref="T:ActionComponents.ACToastGravity"/> 
            </summary>
            <value>The offset.</value>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastGravity)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single,ActionComponents.ACToastGravity)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,System.Single,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="duration">Duration.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.#ctor(System.String,ActionComponents.ACToastLength,System.Single,System.Single,ActionComponents.ACToastGravity,ActionComponents.ACToastAppearance,CoreGraphics.CGPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToast"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="length">Length.</param>
            <param name="fadeInDuration">Fade in duration.</param>
            <param name="fadeOutDuration">Fade out duration.</param>
            <param name="gravity">Gravity.</param>
            <param name="appearance">Appearance.</param>
            <param name="offset">Offset.</param>
        </member>
        <member name="M:ActionComponents.ACToast.Show">
            <summary>
            Show the <see cref="T:ActionComponents.ACToast"/> message 
            </summary>
        </member>
        <member name="M:ActionComponents.ACToast.HideToast">
            <summary>
            Hides this <see cref="T:ActionComponents.ACToast"/> message 
            </summary>
        </member>
        <member name="M:ActionComponents.ACToast.RemoveToast">
            <summary>
            Removes the <see cref="T:ActionComponents.ACToast"/> from the parent <c>window</c> and releases it from
            memory
            </summary>
        </member>
        <member name="M:ActionComponents.ACToast.FadeInComplete">
            <summary>
            Called when the fade in animation has completed
            </summary>
        </member>
        <member name="M:ActionComponents.ACToast.FadeOutComplete">
            <summary>
            Called when the fade out animation has completed
            </summary>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.textSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.cornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.textColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.textShadow">
            <summary>
            Gets or sets the text shadow.
            </summary>
            <value>The text shadow.</value>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:ActionComponents.ACToastAppearance.flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACToastAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 degisn language</remarks>
        </member>
        <member name="M:ActionComponents.ACToastAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACToastAppearance"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACToastAppearance.Flatten">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACToastAppearance"/> to match the new iOS 7 design language
            </summary>
        </member>
        <member name="M:ActionComponents.ACToastAppearance.Flatten(UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACToastAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:ActionComponents.ACToastAppearance.Flatten(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACToastAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="foregroundColor">Foreground color.</param>
        </member>
        <member name="T:ActionComponents.ACToastAppearance.AppearanceModifiedDelegate">
            <summary>
            Occurs when the appearance is modified.
            </summary>
        </member>
        <member name="M:ActionComponents.ACToastAppearance.RaiseAppearanceModified">
            <summary>
            Raises the appearance modified event
            </summary>
            <remarks>Used to inform the attached component that an appearance 
            attribute has been modified</remarks>
        </member>
        <member name="T:ActionComponents.ACToastGravity">
            <summary>
            User interface action toast gravity.
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastGravity.Top">
            <summary>
            Displays the Toast message at the top of the screen
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastGravity.Center">
            <summary>
            Displays the Toast message in the middle of the screen
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastGravity.Bottom">
            <summary>
            Displays the Toast message at the bottom of the screen
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastGravity.Custom">
            <summary>
            Displays the Toast message at a custom position
            </summary>
        </member>
        <member name="T:ActionComponents.ACToastLength">
            <summary>
            Provides a alternative way to specify how long a <see cref="T:ActionComponents.ACToast"/> message will be displayed 
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastLength.Forever">
            <summary>
            The <see cref="T:ActionComponents.ACToast"/> message will be displayed until the user touches it or it is
            removed programatically
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastLength.Short">
            <summary>
            The <see cref="T:ActionComponents.ACToast"/> message will be displayed for a short amount of time
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastLength.Medium">
            <summary>
            The <see cref="T:ActionComponents.ACToast"/> message will be displayed for a medium amount of time
            </summary>
        </member>
        <member name="F:ActionComponents.ACToastLength.Long">
            <summary>
            The <see cref="T:ActionComponents.ACToast"/> message will be displayed for a long amount of time
            </summary>
        </member>
        <member name="T:ActionComponents.iOSDevice">
            <summary>
            Helper class that returns information about the iOS device that the Xamarin.iOS app is running on
            </summary>
        </member>
        <member name="P:ActionComponents.iOSDevice.isPhone">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.iOSDevice"/> is phone.
            </summary>
            <value><c>true</c> if is phone; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isPad">
            <summary>
            Gets a value indicating whether this <see cref="!:Appracatappra.ActionComponents.iOSDevice"/> is pad.
            </summary>
            <value><c>true</c> if is pad; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.is568h">
            <summary>
            Gets a value indicating whether this <see cref="!:Appracatappra.ActionComponents.iOSDevice"/> is a is568h device such as the iPhone 5.
            </summary>
            <value><c>true</c> if is568h; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isRetina">
            <summary>
            Gets a value indicating whether this <see cref="!:Appracatappra.ActionComponents.iOSDevice"/> has a retina display.
            </summary>
            <value><c>true</c> if is retina; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.iSHD">
            <summary>
            Gets a value indicating whether this <see cref="!:Appracatappra.ActionComponents.iOSDevice"/> is running on a High Definition (HD) screen such as an iPhone 6 device.
            </summary>
            <value><c>true</c> the app is running on an HD device; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isIOS6">
            <summary>
            Gets a value indicating whether the app is running on an iOS 6 device.
            </summary>
            <value><c>true</c> if the app is running on iOS 6; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isIOS7">
            <summary>
            Gets a value indicating whether the app is running on an iOS 7 device.
            </summary>
            <value><c>true</c> if the app is running on iOS 7; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isIOS8">
            <summary>
            Gets a value indicating whether the app is running on an iOS 8 device.
            </summary>
            <value><c>true</c> if the app is running on iOS 8; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.isIOS9">
            <summary>
            Gets a value indicating whether the app is running on an iOS 9 device.
            </summary>
            <value><c>true</c> if the app is running on iOS 9; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.currentDeviceOrientation">
            <summary>
            Gets the current device orientation.
            </summary>
            <value>The current device orientation.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.RotatedScreenBounds">
            <summary>
            Returns the bounds for the device's <c>MainScreen</c> adjusted to fit the current <c>UIInterfaceOrientation</c>
            </summary>
            <value>The rotated screen bounds.</value>
        </member>
        <member name="P:ActionComponents.iOSDevice.AvailableScreenBounds">
            <summary>
            Returns the bounds for the device's <c>MainScreen</c> adjusted to fit the current <c>UIInterfaceOrientation</c> taking into
            account if the system status bar is being displayed
            </summary>
            <value>The rotated screen bounds optionally minus the system status bar area</value>
        </member>
        <member name="P:ActionComponents.ACOval.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACOval"/>
            is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACOval.Appearance">
            <summary>
            Gets or sets the appearance for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="P:ActionComponents.ACOval.AppearanceDisabled">
            <summary>
            Gets or sets the disabled appearance for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The appearance disabled.</value>
        </member>
        <member name="P:ActionComponents.ACOval.AppearanceTouched">
            <summary>
            Gets or sets the touched appearance for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The appearance touched.</value>
        </member>
        <member name="P:ActionComponents.ACOval.Text">
            <summary>
            Gets or sets the text value for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActionComponents.ACOval.Image">
            <summary>
            Shortcut to set the image of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ActionComponents.ACOval.ImagePlacement">
            <summary>
            Shortcut to set the image placement of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The image placement.</value>
        </member>
        <member name="P:ActionComponents.ACOval.ImageX">
            <summary>
            Shortcut to set the image placement of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The image x.</value>
        </member>
        <member name="P:ActionComponents.ACOval.ImageY">
            <summary>
            Shortcut to set the image placement of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The image y.</value>
        </member>
        <member name="P:ActionComponents.ACOval.ImageWidth">
            <summary>
            Shortcut to set the image width of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:ActionComponents.ACOval.ImageHeight">
            <summary>
            Shortcut to set the image height of all appearance types for this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="M:ActionComponents.ACOval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOval"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACOval.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOval"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACOval.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOval"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACOval.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOval"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACOval.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOval"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACOval.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACOval.Redraw">
            <summary>
            Redraw this <see cref="T:ActionComponents.ACOval"/>.
            </summary>
        </member>
        <member name="M:ActionComponents.ACOval.GetAppearance">
            <summary>
            Gets the appearance.
            </summary>
            <returns>The appearance.</returns>
        </member>
        <member name="M:ActionComponents.ACOval.DrawText(CoreGraphics.CGRect)">
            <summary>
            Draws the text.
            </summary>
            <param name="frame">Frame.</param>
        </member>
        <member name="M:ActionComponents.ACOval.DrawOval(CoreGraphics.CGRect,System.nfloat)">
            <summary>
            Draws the oval.
            </summary>
            <param name="frame">Frame.</param>
            <param name="borderWidth">Border width.</param>
        </member>
        <member name="M:ActionComponents.ACOval.DrawOvalPict(CoreGraphics.CGRect,System.nfloat)">
            <summary>
            Draws the oval pict.
            </summary>
            <param name="frame">Frame.</param>
            <param name="borderWidth">Border width.</param>
        </member>
        <member name="M:ActionComponents.ACOval.Draw(CoreGraphics.CGRect)">
            <summary>
            Draw the specified rect.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.FontName">
            <summary>
            Gets or sets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.ImagePlacement">
            <summary>
            Gets or sets the image placement.
            </summary>
            <value>The image placement.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.ImageX">
            <summary>
            Gets or sets the image x.
            </summary>
            <value>The image x.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.ImageY">
            <summary>
            Gets or sets the image y.
            </summary>
            <value>The image y.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.ImageHeight">
            <summary>
            Gets or sets the height of the image.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.ImageWidth">
            <summary>
            Gets or sets the width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.HasBorder">
            <summary>
            Gets or sets a value indicating whether this instance has border.
            </summary>
            <value><c>true</c> if this instance has border; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ActionComponents.ACOvalAppearance.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="M:ActionComponents.ACOvalAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOvalAppearance"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACOvalAppearance.#ctor(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOvalAppearance"/> class.
            </summary>
            <param name="fillColor">Fill color.</param>
            <param name="borderColor">Border color.</param>
        </member>
        <member name="M:ActionComponents.ACOvalAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACOvalAppearance"/> class.
            </summary>
            <param name="fillColor">Fill color.</param>
            <param name="borderColor">Border color.</param>
            <param name="fontColor">Font color.</param>
        </member>
        <member name="T:ActionComponents.ACOvalAppearance.AppearanceModifiedDelegate">
            <summary>
            Occurs when the appearance is modified.
            </summary>
        </member>
        <member name="M:ActionComponents.ACOvalAppearance.RaiseAppearanceModified">
            <summary>
            Raises the appearance modified event
            </summary>
            <remarks>Used to inform the attached component that an appearance 
            attribute has been modified</remarks>
        </member>
        <member name="T:ActionComponents.ACOvalImagePlacement">
            <summary>
            Defines the position of an image displayed as the background of a <see cref="T:ActionComponents.ACOval"/>
            </summary>
        </member>
        <member name="F:ActionComponents.ACOvalImagePlacement.TopLeft">
            <summary>
            Pin the image to the top left corner of the the Oval
            </summary>
        </member>
        <member name="F:ActionComponents.ACOvalImagePlacement.Center">
            <summary>
            Center the image in the oval
            </summary>
        </member>
        <member name="F:ActionComponents.ACOvalImagePlacement.ScaleToFit">
            <summary>
            Scales the image to fit in the oval
            </summary>
        </member>
        <member name="F:ActionComponents.ACOvalImagePlacement.FreeForm">
            <summary>
            Allows the user to specify the X and Y position and the Height and Width of the image.
            </summary>
        </member>
        <member name="T:ActionComponents.ACImage">
            <summary>
            <see cref="T:ActionComponents.ACImage"/> adds several helpful routines for working with <c>UIImages</c> including the ability to
            dectect iPhone 5 (or greater) images in the form name<c>-568h@2x</c>.ext and automatically load them in place of name.ext files. It includes methods to help
            with the rotation of images as well.
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="M:ActionComponents.ACImage.FromFile(System.String)">
            <summary>
            Returns a <c>UIImage</c> from the given filename or <c>null</c> if the image cannot be loaded
            </summary>
            <returns>The <c>UIImage</c> for the specified filename or <c>null</c> if not found or error</returns>
            <param name="filename">The full name and path of the image to load</param>
            <remarks>If running on an iPhone 5 (or greater) and asking for an image file in the form name.ext and a file in same directory with a name in the format name<c>-568h@2x</c>.ext exists, it
            will automatically be loaded instead. The same holds true for devices with <c>Retina Displays</c>, if ask for a file name.ext and a file name<c>@2x</c>.ext exists,
            it will automatically be loaded instead.</remarks>
        </member>
        <member name="M:ActionComponents.ACImage.DegreesToRadians(System.nfloat)">
            <summary>
            Given a value in degrees, return the value in radians
            </summary>
            <param name="degrees">Degrees to convert</param>
            <returns>The value in radians</returns>
        </member>
        <member name="M:ActionComponents.ACImage.RotateImage(UIKit.UIImage,System.Single)">
            <summary>
            Given a source <c>UIImage</c>, return a new <c>UIImage</c> containing the source image rotated
            to the given radian value
            </summary>
            <param name="source">
            The source image to rotate
            </param>
            <param name="degrees">
            The degrees to rotate the image to
            </param>
            <returns>
            A new <c>UIImage</c> containing the image rotated to the given degrees
            </returns>
        </member>
        <member name="T:ActionComponents.ACImageView">
            <summary>
            The <see cref="T:ActionComponents.ACImageView"/> is a custom <c>UIImageView</c> that defines several helper properties and methods that
            make it a great basis for any custom user interface controls. It has built in <c>Dragable</c> support that can be limited in movement by
            a <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>X</c> and/or <c>Y</c> axis. It defines helper events for
            being <c>Touched</c>, <c>Moved</c>, and/or <c>Released</c> and can be set to automatically become the front view when it is touched. And provides methods
            to make moving, rotating, and resizing the <see cref="T:ActionComponents.ACImageView"/> easier with less code. 
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACImageView"/> contains a special <c>Purge</c> command to force the release of any
            subview that are attached to it. This can be especially useful when dealing with tight memory situations or views that contain several large graphics.
            Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACImageView.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.draggable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACImageView"/>
            is draggable.
            </summary>
            <value><c>true</c> if is draggable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.dragging">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACImageView"/> is being dragged by the user.
            </summary>
            <value><c>true</c> if dragging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.bringToFrontOnTouched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACImageView"/>
            is automatically brought to the front when touched.
            </summary>
            <value><c>true</c> if bring to front on touched; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.xConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>x axis</c> of this
            <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <value>The x constraint.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.yConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>y axis</c> of this
            <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <value>The y constraint.</value>
        </member>
        <member name="P:ActionComponents.ACImageView.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACImageView"/>
            is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            <remarks>Enabling/disabling a <see cref="T:ActionComponents.ACImageView"/> automatically changes the value of it's
            <c>UserInteractionEnabled</c> flag</remarks>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(UIKit.UIImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(UIKit.UIImage,UIKit.UIImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="imgRegular">Image regular.</param>
            <param name="imgHilight">Image hilight.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="filename">Filename.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.#ctor(System.String,CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACImageView"/> class.
            </summary>
            <param name="filename">Filename.</param>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.XConstraintModified">
            <summary>
            Adjust this view if the <c>xConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.YConstraintModified">
            <summary>
            Adjust this view if the <c>yConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.FromFile(System.String)">
            <summary>
            Loads the <c>Image</c> displayed by this <see cref="T:ActionComponents.ACImageView"/> from the
            given filename. If unable to load from the file, the <c>Image</c> property will be <c>null</c>.
            </summary>
            <param name="filename">The name and path of the image file to load</param>
            <remarks>If an image is already attached to this <see cref="T:ActionComponents.ACImageView"/> it will be
            disposed of before load the new image to save memory</remarks>
        </member>
        <member name="M:ActionComponents.ACImageView.DisposeImage">
            <summary>
            Forces the release of an image data attached to this <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.MoveToPoint(System.Single,System.Single)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACImageView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.MoveToPoint(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACImageView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.Resize(System.Single,System.Single)">
            <summary>
            Resize this <see cref="T:ActionComponents.ACImageView"/> to the specified width and height.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.RotateTo(System.Single)">
            <summary>
            Rotates this <see cref="T:ActionComponents.ACImageView"/> to the given degrees 
            </summary>
            <param name="degrees">Degrees.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.RotateImageTo(System.Single)">
            <summary>
            Rotates the <c>Image</c> attached to this <see cref="T:ActionComponents.ACImageView"/> to the given degrees without rotating
            the view itself
            </summary>
            <param name="degrees">Degrees.</param>
            <remarks>If there isn't sufficient "whitespace" around the edges of the image, it may become clipped during rotation. This method works best with
            absolutely square images</remarks>
        </member>
        <member name="M:ActionComponents.ACImageView.PointInside(System.nfloat,System.nfloat)">
            <summary>
            Tests to see if the given x and y coordinates are inside this <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.PointInside(CoreGraphics.CGPoint)">
            <summary>
            Test to see if the give point was inside this <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.Purge(System.Boolean)">
            <summary>
            The <c>Purge</c> command causes this <see cref="T:ActionComponents.ACImageView"/> to force the removal of any
            subview from the screen and dispose of the memory that they contain. If <c>forceGarbageCollection</c> is <c>true</c>, garbage collection
            will be forced at the end of the purge cycle. The <c>Purge</c> command will cascade to any <see cref="T:ActionComponents.ACImageView"/>
            or <see cref="T:ActionComponents.ACImageView"/> subviews attached to this <see cref="T:ActionComponents.ACImageView"/> 
            </summary>
            <param name="forceGarbageCollection">If set to <c>true</c> force garbage collection.</param>
            <remarks>Special handling is taken on <c>UIImageViews</c> to ensure that they fully release any image memory that they contain. Simply
            calling <c>Dispose()</c> doesn't always release the child images in the <c>UIImageView</c>'s <c>Image</c> property.</remarks>
        </member>
        <member name="M:ActionComponents.ACImageView.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when the <see cref="T:ActionComponents.ACImageView"/> is being dragged
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACImageView.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACImageView.ACImageViewTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACImageView"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACImageView.ACImageViewMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACImageView"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.RaiseMoved">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACImageView.ACImageViewReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACImageView"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACImageView.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="T:ActionComponents.ACLabel">
            <summary>
            The <see cref="T:ActionComponents.ACLabel"/> is a custom <c>UILabel</c> that contains events to easily handle being
            touched and adds helper methods to make it easier to move or resize the label.
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only</remarks>
        </member>
        <member name="P:ActionComponents.ACLabel.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="T:ActionComponents.ACLabel"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACLabel.bringToFrontOnTouched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACLabel"/>
            is automatically brought to the front when touched.
            </summary>
            <value><c>true</c> if bring to front on touched; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACLabel.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACLabel"/>
            is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            <remarks>Enabling/disabling a <see cref="T:ActionComponents.ACLabel"/> automatically changes the value of it's
            <c>UserInteractionEnabled</c> flag</remarks>
        </member>
        <member name="M:ActionComponents.ACLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACLabel"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACLabel.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACLabel"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACLabel"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACLabel"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACLabel"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACLabel.MoveToPoint(System.nfloat,System.nfloat)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACLabel"/> to the given point 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.MoveToPoint(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACLabel"/> to the given point 
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.Resize(System.nfloat,System.nfloat)">
            <summary>
            Resize this <see cref="T:ActionComponents.ACLabel"/> to the specified width and height.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.RotateTo(System.nfloat)">
            <summary>
            Rotates this <see cref="T:ActionComponents.ACLabel"/> to the given degrees 
            </summary>
            <param name="degrees">Degrees.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACLabel.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACLabel.ACLabelTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACLabel"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACLabel.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACLabel.ACLabelReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACLabel"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACLabel.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="T:ActionComponents.ACView">
            <summary>
            The <see cref="T:ActionComponents.ACView"/> is a custom <c>UIView</c> that defines several helper properties and methods that
            make it a great basis for any custom user interface controls. It has built in <c>Dragable</c> support that can be limited in movement by
            a <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>X</c> and/or <c>Y</c> axis. It defines helper events for
            being <c>Touched</c>, <c>Moved</c>, and/or <c>Released</c> and can be set to automatically become the front view when it is touched. And provides methods
            to make moving, rotating, and resizing the <see cref="T:ActionComponents.ACView"/> easier with less code.
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACView"/> contains a special <c>Purge</c> command to force the release of any
            subview that are attached to it. This can be especially useful when dealing with tight memory situations or views that contain several large graphics.
            Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACView.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACView.draggable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACView"/>
            is draggable.
            </summary>
            <value><c>true</c> if is draggable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACView.dragging">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACView"/> is being dragged by the user.
            </summary>
            <value><c>true</c> if dragging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACView.bringToFrontOnTouched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACView"/>
            is automatically brought to the front when touched.
            </summary>
            <value><c>true</c> if bring to front on touched; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACView.xConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>x axis</c> of this
            <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <value>The x constraint.</value>
        </member>
        <member name="P:ActionComponents.ACView.yConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>y axis</c> of this
            <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <value>The y constraint.</value>
        </member>
        <member name="P:ActionComponents.ACView.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACView"/>
            is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            <remarks>Enabling/disabling a <see cref="T:ActionComponents.ACView"/> automatically changes the value of it's
            <c>UserInteractionEnabled</c> flag</remarks>
        </member>
        <member name="M:ActionComponents.ACView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACView"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACView"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACView.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACView"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACView.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACView"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACView"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACView.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.XConstraintModified">
            <summary>
            Adjust this view if the <c>xConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.YConstraintModified">
            <summary>
            Adjust this view if the <c>yConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.MoveToPoint(System.nfloat,System.nfloat)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACView.MoveToPoint(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACView.Resize(System.Single,System.Single)">
            <summary>
            Resize this <see cref="T:ActionComponents.ACView"/> to the specified width and height.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ActionComponents.ACView.RotateTo(System.Single)">
            <summary>
            Rotates this <see cref="T:ActionComponents.ACView"/> to the given degrees
            </summary>
            <param name="degrees">Degrees.</param>
        </member>
        <member name="M:ActionComponents.ACView.PointInside(System.nfloat,System.nfloat)">
            <summary>
            Tests to see if the given x and y coordinates are inside this <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACView.PointInside(CoreGraphics.CGPoint)">
            <summary>
            Test to see if the given point is inside this <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <returns><c>true</c>, if point was inside, <c>false</c> otherwise.</returns>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACView.Purge(System.Boolean)">
            <summary>
            The <c>Purge</c> command causes this <see cref="T:ActionComponents.ACView"/> to force the removal of any
            subview from the screen and dispose of the memory that they contain. If <c>forceGarbageCollection</c> is <c>true</c>, garbage collection
            will be forced at the end of the purge cycle. The <c>Purge</c> command will cascade to any <see cref="T:ActionComponents.ACView"/>
            or <see cref="T:ActionComponents.ACImageView"/> subviews attached to this <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <param name="forceGarbageCollection">If set to <c>true</c> force garbage collection.</param>
            <remarks>Special handling is taken on <c>UIImageViews</c> to ensure that they fully release any image memory that they contain. Simply
            calling <c>Dispose()</c> doesn't always release the child bitmaps in the <c>UIImageView</c>'s <c>Image</c> property.</remarks>
        </member>
        <member name="M:ActionComponents.ACView.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACView.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when the <see cref="T:ActionComponents.ACView"/> is being dragged
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACView.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACView.ACViewTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACView"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACView.ACViewMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACView"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.RaiseMoved">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACView.ACViewReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACView"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACView.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="T:ActionComponents.ACViewDragConstraint">
            <summary>
            Defines the <see cref="T:ActionComponents.ACViewDragConstraintType"/> of constraint placed on the <c>X</c> or <c>Y</c> axis of
            a <see cref="T:ActionComponents.ACView"/> and the optional <c>minimumValue</c> and <c>maximumValue</c> for <c>Constrained</c>
            axis types
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACViewDragConstraint.constraintType">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraintType"/> of the
            <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <value>The type of the constraint.</value>
        </member>
        <member name="P:ActionComponents.ACViewDragConstraint.minimumValue">
            <summary>
            Gets or sets the minimum value that this axis can be moved to if the <see cref="T:ActionComponents.ACViewDragConstraintType"/>
            is <c>Constrained</c>
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:ActionComponents.ACViewDragConstraint.maximumValue">
            <summary>
            Gets or sets the maximum value that this axis can be moved to if the <see cref="T:ActionComponents.ACViewDragConstraintType"/>
            is <c>Constrained</c>
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="M:ActionComponents.ACViewDragConstraint.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACViewDragConstraint"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACViewDragConstraint.#ctor(ActionComponents.ACViewDragConstraintType,System.nfloat,System.nfloat)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACViewDragConstraint"/> class.
            </summary>
            <param name="constraint">The default <see cref="T:ActionComponents.ACViewDragConstraintType"/> </param>
            <param name="minimum">Minimum axis value</param>
            <param name="maximum">Maximum axis value</param>
        </member>
        <member name="T:ActionComponents.ACViewDragConstraint.ConstraintChangedDelegate">
            <summary>
            Occurs when a value on this constraint has been changed
            </summary>
        </member>
        <member name="M:ActionComponents.ACViewDragConstraint.RaiseConstraintChanged">
            <summary>
            Raises the constraint changed event
            </summary>
        </member>
        <member name="T:ActionComponents.ACViewDragConstraintType">
            <summary>
            User interface action view drag constraint type.
            </summary>
        </member>
        <member name="F:ActionComponents.ACViewDragConstraintType.None">
            <summary>
            No constraint, this axis can be moved to any position
            </summary>
        </member>
        <member name="F:ActionComponents.ACViewDragConstraintType.Locked">
            <summary>
            This axis is locked to it's current position and cannot be moved
            </summary>
        </member>
        <member name="F:ActionComponents.ACViewDragConstraintType.Constrained">
            <summary>
            This axis is constrained between a <c>minimalValue</c> and <c>maximumValue</c> specified by the user
            </summary>
        </member>
        <member name="T:ActionComponents.ACWebView">
            <summary>
            The <see cref="T:ActionComponents.ACWebView"/> is a custom <c>UIWebView</c> with several helper methods that make
            it easier to use and require fewer lines of code to implement such as <c>LoadFile</c> or <c>LoadURL</c>. It has built in <c>Dragable</c> support that can be limited in movement by
            a <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>X</c> and/or <c>Y</c> axis. It defines helper events for
            being <c>Touched</c>, <c>Moved</c>, and/or <c>Released</c> and can be set to automatically become the front view when it is touched. And provides methods
            to make moving, rotating, and resizing the <see cref="T:ActionComponents.ACWebView"/> easier with less code.
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACWebView.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.displayNetworkActivityIndicator">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACWebView"/> automatically displays the network activity indicator when it is loading a file
            or URL
            </summary>
            <value><c>true</c> if display network activity indicator; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.draggable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACWebView"/>
            is draggable.
            </summary>
            <value><c>true</c> if is draggable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.dragging">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACWebView"/> is being dragged by the user.
            </summary>
            <value><c>true</c> if dragging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.bringToFrontOnTouched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACWebView"/>
            is automatically brought to the front when touched.
            </summary>
            <value><c>true</c> if bring to front on touched; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.xConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>x axis</c> of this
            <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
            <value>The x constraint.</value>
        </member>
        <member name="P:ActionComponents.ACWebView.yConstraint">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraint"/> applied to the <c>y axis</c> of this
            <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
            <value>The y constraint.</value>
        </member>
        <member name="M:ActionComponents.ACWebView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACWebView"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACWebView"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACWebView"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACWebView"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACWebView"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.XConstraintModified">
            <summary>
            Adjust this view if the <c>xConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.YConstraintModified">
            <summary>
            Adjust this view if the <c>yConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.LoadFile(System.String)">
            <summary>
            Loads the given file and displayes it
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.LoadMarkdown(System.String)">
            <summary>
            Loads the given Markdown text, trasnforms it into HTML and displays the results
            </summary>
            <param name="markdownText">Markdown text.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.LoadURL(System.String)">
            <summary>
            Loads the given URL and displays it
            </summary>
            <param name="url">URL.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.LoadURL(Foundation.NSUrl)">
            <summary>
            Loads the given URL and displays it
            </summary>
            <param name="url">URL.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.ClearContents">
            <summary>
            Clears the contents of this <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.MoveToPoint(System.Single,System.Single)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACWebView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.MoveToPoint(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACWebView"/> to the given point and honors any
            <see cref="T:ActionComponents.ACViewDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.Resize(System.Single,System.Single)">
            <summary>
            Resize this <see cref="T:ActionComponents.ACWebView"/> to the specified width and height.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.RotateTo(System.Single)">
            <summary>
            Rotates this <see cref="T:ActionComponents.ACWebView"/> to the given degrees
            </summary>
            <param name="degrees">Degrees.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.PointInside(System.nfloat,System.nfloat)">
            <summary>
            Tests to see if the given x and y coordinates are inside this <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.PointInside(CoreGraphics.CGPoint)">
            <summary>
            Test to see if the given point is inside this <see cref="T:ActionComponents.ACWebView"/> 
            </summary>
            <returns><c>true</c>, if point was inside, <c>false</c> otherwise.</returns>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when the <see cref="T:ActionComponents.ACView"/> is being dragged
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACWebView.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACWebView.ACWebViewTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACWebView"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACWebView.ACWebViewMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACWebView"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.RaiseMoved">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACWebView.ACWebViewReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACWebView"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACWebView.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem">
            <summary>
            The <see cref="T:ActionComponents.ACTableItem"/> works with the <see cref="T:ActionComponents.ACTableViewController"/> to provide
            a simple way to present tabular information without have to create a lot of repetitive code.
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACTableItem.tag">
            <summary>
            Gets or sets the [OPTIONAL] object tag that can be attached to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.details">
            <summary>
            Gets or sets the detail text for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The detail text.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.text">
            <summary>
            Gets or sets the text for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.canSelect">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACTableItem"/> can be selected.
            </summary>
            <value><c>true</c> if this instance can select; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.style">
            <summary>
            Gets or sets the table cell style for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.accessory">
            <summary>
            Gets or sets the table accessory type for this
            </summary>
            <value>The accessory.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.imageSource">
            <summary>
            Gets or sets the source of an image displayed for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The image source.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.imageFile">
            <summary>
            Gets or sets the source of an image displayed for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The image file.</value>
            <remarks>This property will be used based on the value of the <c>imageSource</c> property</remarks>
        </member>
        <member name="P:ActionComponents.ACTableItem.image">
            <summary>
            Gets the image for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The image.</value>
            <remarks>This property will be used based on the value of the <c>imageSource</c> property</remarks>
        </member>
        <member name="P:ActionComponents.ACTableItem.contentView">
            <summary>
            Gets or sets the content view associated with this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The content view.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.accessoryView">
            <summary>
            Gets or sets the accessory view associated with this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The accessory view.</value>
        </member>
        <member name="P:ActionComponents.ACTableItem.accessoryValue">
            <summary>
            Gets or sets the value being modified by the accessoryView attached to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <value>The accessory value.</value>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.String,UIKit.UITableViewCellStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="customImage">If set to <c>true</c> custom image.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.String,System.String,UIKit.UITableViewCellStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.String,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(System.Boolean,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="customImage">If set to <c>true</c> custom image.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.#ctor(ActionComponents.ACTableItemImageSource,System.String,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableItem"/> class.
            </summary>
            <param name="imageSource">Image source.</param>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.DefinesItemHeight">
            <summary>
            Does this <see cref="T:ActionComponents.ACTableItem"/> define an item height?
            </summary>
            <returns><c>true</c>, if item height was defines, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ActionComponents.ACTableItem.GetItemHeight">
            <summary>
            Gets the height of the item.
            </summary>
            <returns>The item height.</returns>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessorySwitch(System.Boolean)">
            <summary>
            Adds a switch accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory switch.</returns>
            <param name="value">The value that will be adjusted by the switch</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessorySwitch(System.Boolean,ActionComponents.ACTableItem.ACTableAccessorySwitchDelegate)">
            <summary>
            Adds a switch accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory switch.</returns>
            <param name="value">Sets the initial value for the switch</param>
            <param name="switchDelegate">This delegate will be called when the switch's value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryStepper(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a stepper accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory stepper.</returns>
            <param name="minimumValue">Minimum value.</param>
            <param name="maximumValue">Maximum value.</param>
            <param name="stepValue">Step value.</param>
            <param name="value">The value that will be adjusted by this stepper</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryStepper(System.Double,System.Double,System.Double,System.Double,ActionComponents.ACTableItem.ACTableAccessoryStepperDelegate)">
            <summary>
            Adds a stepper accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory stepper.</returns>
            <param name="minimumValue">Minimum value.</param>
            <param name="maximumValue">Maximum value.</param>
            <param name="stepValue">Step value.</param>
            <param name="value">Value.</param>
            <param name="stepperDelegate">This delegate will be called when the stepper value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessorySlider(System.Single,System.Single,System.Single)">
            <summary>
            Adds a slider accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory slider.</returns>
            <param name="minimumValue">Minimum value.</param>
            <param name="maximumValue">Maximum value.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessorySlider(System.Single,System.Single,System.Single,ActionComponents.ACTableItem.ACTableAccessorySliderDelegate)">
            <summary>
            Adds a slider accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory slider.</returns>
            <param name="minimumValue">Minimum value.</param>
            <param name="maximumValue">Maximum value.</param>
            <param name="value">Value.</param>
            <param name="sliderDelegate">This delegate is called when the slider's value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryActionImageView(System.String)">
            <summary>
            Adds an image accesspry to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory action image view.</returns>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryActionImageView(UIKit.UIImage)">
            <summary>
            Adds an image accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory action image view.</returns>
            <param name="image">Image.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryButton(UIKit.UIButtonType,System.Single,System.String)">
            <summary>
            Adds a button accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory button.</returns>
            <param name="type">Type.</param>
            <param name="width">the button's width</param>
            <param name="title">Title.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryButton(UIKit.UIButtonType,System.Single,System.String,ActionComponents.ACTableItem.ACTableAccessoryButtonDelegate)">
            <summary>
            Adds a button accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory button.</returns>
            <param name="type">Type.</param>
            <param name="width">Width.</param>
            <param name="title">Title.</param>
            <param name="buttonDelegate">The delegate that is called when the button is pressed.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIFont,System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIFont,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,UIKit.UIFont,System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,UIKit.UIFont,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIColor,UIKit.UIColor,UIKit.UIFont,System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="textColor">Text color.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIColor,UIKit.UIColor,UIKit.UIFont,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="textColor">Text color.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,UIKit.UIColor,UIKit.UIColor,UIKit.UIFont,System.Single,System.String,System.String)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="textColor">Text color.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UIKeyboardType,UIKit.UIColor,UIKit.UIColor,UIKit.UIFont,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/>
            </summary>
            <returns>The accessory text field.</returns>
            <param name="keyboardType">Keyboard type.</param>
            <param name="textColor">Text color.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="M:ActionComponents.ACTableItem.AddAccessoryTextField(UIKit.UITextBorderStyle,UIKit.UIColor,UIKit.UIColor,UIKit.UIFont,UIKit.UITextAutocorrectionType,UIKit.UIKeyboardType,UIKit.UIReturnKeyType,UIKit.UITextFieldViewMode,System.Single,System.String,System.String,ActionComponents.ACTableItem.ACTableAccessoryTextDelegate)">
            <summary>
            Add a text field accessory to this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <returns>The accessory text field.</returns>
            <param name="borderStyle">Border style.</param>
            <param name="textColor">Text color.</param>
            <param name="backgroundColor">Background color.</param>
            <param name="font">Font.</param>
            <param name="autoCorrectionType">Auto correction type.</param>
            <param name="keyboardType">Keyboard type.</param>
            <param name="returnKeyType">Return key type.</param>
            <param name="clearButtonMode">Clear button mode.</param>
            <param name="width">Width.</param>
            <param name="placeholder">Placeholder.</param>
            <param name="text">Text.</param>
            <param name="textDelegate">The delegate that is called when the text value changes.</param>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableAccessorySwitchDelegate">
            <summary>
            Occurrs when this <see cref="T:ActionComponents.ACTableItem"/> has an attached <c>UISwitch</c> accessory
            and the value is changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableAccessoryStepperDelegate">
            <summary>
            Occurrs when this <see cref="T:ActionComponents.ACTableItem"/> has an attached <c>UIStepper</c> accessory
            and the value is changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableAccessorySliderDelegate">
            <summary>
            Occurrs when this <see cref="T:ActionComponents.ACTableItem"/> has an attached <c>UISlider</c> accessory
            and the value is changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableAccessoryButtonDelegate">
            <summary>
            Occurrs when this <see cref="T:ActionComponents.ACTableItem"/> has an attached <c>UIButton</c> accessory
            and the button is tapped.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableAccessoryTextDelegate">
            <summary>
            Occurrs when this <see cref="T:ActionComponents.ACTableItem"/> has an attached <c>UITextField</c> accessory
            and the value is changed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableItemSelectedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> has been selected by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseItemSelected">
            <summary>
            Raises the item selected event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableItemValueChangedDelegate">
            <summary>
            Occurs when the value for this <see cref="T:ActionComponents.ACTableItem"/> have been changed 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseItemValueChanged">
            <summary>
            Raises the item value changed event
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:ActionComponents.ACTableItem.ACTableItemRequestCustomImageDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> needs the caller to draw a custom image
            </summary>
            <remarks>This event will be raised based on the state of the <c>imageSource</c> property</remarks>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseRequestCustomImage">
            <summary>
            Raises the request custom image event
            </summary>
            <returns>The request custom image.</returns>
        </member>
        <member name="T:ActionComponents.ACTableItem.AccessoryButtonTappedDelegate">
            <summary>
            Occurs when a <see cref="T:ActionComponents.ACTableItem"/>'s accessory button is tapped
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseAccessoryButtonTapped">
            <summary>
            Raises the accessory button tapped event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.CanPerformActionDelegate">
            <summary>
            Occurs when the <see cref="T:ActionComponents.ACTableItem"/> needs to see if it should omit the copy or
            paste command for this row in the TableView
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseCanPerformAction">
            <summary>
            Raises the can perform action.
            </summary>
            <returns><c>true</c>, if can perform action was raised, <c>false</c> otherwise.</returns>
            <remarks>If the event isn't handled by the caller, the default is <c>true</c> </remarks>
        </member>
        <member name="T:ActionComponents.ACTableItem.DidEndEditingDelegate">
            <summary>
            Occurs when editing has ended for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseDidEndEditing">
            <summary>
            Raises the did end editing event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.EditingStyleForItemDelegate">
            <summary>
            Occurs when the table needs to know the editing style for this <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseEditingStyleForItem">
            <summary>
            Raises the editing style for item.
            </summary>
            <returns>The editing style for item.</returns>
            <remarks>If the event isn't handled by the caller, the default is <c>None</c> </remarks>
        </member>
        <member name="T:ActionComponents.ACTableItem.RequestItemHeightDelegate">
            <summary>
            Occurs when the table needs the height of the footer for the <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableItem.ShouldHighlightItemDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> needs to be highlighted 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseShouldHighlightItem">
            <summary>
            Raises the should highlight item event
            </summary>
            <returns><c>true</c>, if should highlight item was raised, <c>false</c> otherwise.</returns>
            <remarks>If the event isn't handled by the caller, the default is <c>true</c> </remarks>
        </member>
        <member name="T:ActionComponents.ACTableItem.ShouldShowMenuDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> needs to be show the edit menu
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableItem.RaiseShouldShowMenu">
            <summary>
            Raises the should show edit menu event
            </summary>
            <returns><c>true</c>, if should highlight item was raised, <c>false</c> otherwise.</returns>
            <remarks>If the event isn't handled by the caller, the default is <c>true</c> </remarks>
        </member>
        <member name="T:ActionComponents.ACTableItemImageSource">
            <summary>
            Defines the source of an image displayed in an <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="F:ActionComponents.ACTableItemImageSource.None">
            <summary>
            No image
            </summary>
        </member>
        <member name="F:ActionComponents.ACTableItemImageSource.FromFile">
            <summary>
            Loaded from the file specified in the <c>imageFile</c> property of the <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACTableItemImageSource.CustomDrawn">
            <summary>
            The <see cref="T:ActionComponents.ACTableItem"/> will request the caller custom draw the image by raising the <c>RequestCustomImage</c> 
            event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableSection">
            <summary>
            The <see cref="T:ActionComponents.ACTableSection"/> works with the <see cref="T:ActionComponents.ACTableViewController"/> to provide
            a simple way to present tabular information without have to create a lot of repetitive code. It contains a collection of <see cref="T:ActionComponents.ACTableItem"/>s
            used to build a standard UITableView from.
            </summary>
            <remarks>Available in ActionPack Business or Enterperise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACTableSection.tag">
            <summary>
            Gets or sets the [OPTIONAL] object tag for this <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACTableSection.header">
            <summary>
            Gets or sets the header for this <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:ActionComponents.ACTableSection.sectionCellID">
            <summary>
            Gets or sets the ID used to uniquely idetify the cell created from the <see cref="T:ActionComponents.ACTableItem"/>s wihtin this 
            <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
            <value>The section cell ID</value>
            <remarks>If a value isn't specified for this value the section header will be used with any spaces removed</remarks>
        </member>
        <member name="P:ActionComponents.ACTableSection.footer">
            <summary>
            Gets or sets the footer for this <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
            <value>The footer.</value>
        </member>
        <member name="P:ActionComponents.ACTableSection.items">
            <summary>
            Gets the list of <see cref="T:ActionComponents.ACTableItem"/>s for this <see cref="T:ActionComponents.ACTableSection"/>  
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:ActionComponents.ACTableSection.count">
            <summary>
            Returns the number of <see cref="T:ActionComponents.ACTableItem"/> in this <see cref="T:ActionComponents.ACTableSection"/>'s
            collection of items
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:ActionComponents.ACTableSection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableSection"/> class.
            </summary>
            <param name="header">Header.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableSection"/> class.
            </summary>
            <param name="header">Header.</param>
            <param name="footer">Footer.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTableSection"/> class.
            </summary>
            <param name="header">Header.</param>
            <param name="footer">Footer.</param>
            <param name="sectionCellID">Section cell ID.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.RemoveItemAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActionComponents.ACTableItem"/> at index from this section's collection.
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.Clear">
            <summary>
            Removes all <see cref="T:ActionComponents.ACTableItem"/> from this section's collection. 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(ActionComponents.ACTableItem)">
            <summary>
            Adds the <see cref="T:ActionComponents.ACTableItem"/> to this section's collection
            </summary>
            <param name="tableItem">Item.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="text">Text.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.String,UIKit.UITableViewCellStyle,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="customImage">If set to <c>true</c> custom image.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.String,System.String,UIKit.UITableViewCellStyle,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.String,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(System.Boolean,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="customImage">If set to <c>true</c> custom image.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.AddItem(ActionComponents.ACTableItemImageSource,System.String,System.String,System.String,UIKit.UITableViewCellStyle,UIKit.UITableViewCellAccessory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableItem"/> and adds it to this section's collection
            </summary>
            <returns>The item.</returns>
            <param name="imageSource">Image source.</param>
            <param name="imageFile">Image file.</param>
            <param name="text">Text.</param>
            <param name="details">Details.</param>
            <param name="style">Style.</param>
            <param name="accessory">Accessory.</param>
            <param name="canSelect">If set to <c>true</c> can select.</param>
        </member>
        <member name="M:ActionComponents.ACTableSection.DefinesFooterHeight">
            <summary>
            Does this <see cref="T:ActionComponents.ACTableSection"/> define a footer height
            </summary>
            <returns><c>true</c>, if footer height was defined, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ActionComponents.ACTableSection.GetFooterHeight">
            <summary>
            Gets the height of the footer.
            </summary>
            <returns>The footer height.</returns>
        </member>
        <member name="M:ActionComponents.ACTableSection.DefinesHeaderHeight">
            <summary>
            Does this <see cref="T:ActionComponents.ACTableSection"/> define a header height
            </summary>
            <returns><c>true</c>, if footer height was defined, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ActionComponents.ACTableSection.GetHeaderHeight">
            <summary>
            Gets the height of the header.
            </summary>
            <returns>The header height.</returns>
        </member>
        <member name="M:ActionComponents.ACTableSection.DefinesItemHeight">
            <summary>
            Does this <see cref="T:ActionComponents.ACTableSection"/> define an item height?
            </summary>
            <returns><c>true</c>, if item height was defined, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ActionComponents.ACTableSection.GetItemHeight(ActionComponents.ACTableItem)">
            <summary>
            Gets the height of the item.
            </summary>
            <returns>The item height.</returns>
        </member>
        <member name="T:ActionComponents.ACTableSection.ACTableItemSelectedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> has been selected by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableSection.RaiseItemSelected(ActionComponents.ACTableItem)">
            <summary>
            Raises the item selected event
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:ActionComponents.ACTableSection.ACTableItemValueChangedDelegate">
            <summary>
            Occurs when the value for this <see cref="T:ActionComponents.ACTableItem"/> have been changed 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableSection.RaiseItemValueChanged(ActionComponents.ACTableItem)">
            <summary>
            Raises the item value changed event
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:ActionComponents.ACTableSection.AccessoryButtonTappedDelegate">
            <summary>
            Occurs when a <see cref="T:ActionComponents.ACTableItem"/>'s accessory button is tapped
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableSection.RaiseAccessoryButtonTapped(ActionComponents.ACTableItem)">
            <summary>
            Raises the accessory button tapped event
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:ActionComponents.ACTableSection.DidEndEditingDelegate">
            <summary>
            Occurs when editing has ended for the <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableSection.RaiseDidEndEditing(ActionComponents.ACTableItem)">
            <summary>
            Raises the accessory button tapped event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableSection.RequestHeaderHeightDelegate">
            <summary>
            Occurs when the table needs the height of the header for this <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableSection.RequestFooterHeightDelegate">
            <summary>
            Occurs when the table needs the height of the footer for this <see cref="T:ActionComponents.ACTableSection"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableSection.RequestItemHeightDelegate">
            <summary>
            Occurs when the table needs the height of the footer for the <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableSection.ShouldHighlightItemDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> needs to be highlighted 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableViewController">
            <summary>
            The <see cref="T:ActionComponents.ACTableViewController"/> is a customized <c>UITableViewController</c> that support several new
            features, methods and events that make working with <c>UITableViews</c> easier and with far less code. By implementing the <c>RequestData</c> event and passing
            a collection of <see cref="T:ActionComponents.ACTableSection"/>s each containing a collection of
            <see cref="T:ActionComponents.ACTableItem"/>s you'll almost never need to create a custom <c>TableViewDataSource</c> or a 
            <c>TableViewDelegate</c>. 
            </summary>
            <remarks>Available in ActionPack Buesines or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACTableViewController.allowsHighlight">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACTableViewController"/> allows highlighting of rows in the contained UITableView
            </summary>
            <value><c>true</c> if allows highlight; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.allowsSelection">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACTableViewController"/> allows selection of rows in the contained UITableView
            </summary>
            <value><c>true</c> if allows selection; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.footerHeight">
            <summary>
            Gets or sets the height of the footer in the tableview controlled by this <see cref="T:ActionComponents.ACTableViewController"/> 
            </summary>
            <value>The height of the footer.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.headerHeight">
            <summary>
            Gets or sets the height of the header in the tableview controlled by this <see cref="T:ActionComponents.ACTableViewController"/> 
            </summary>
            <value>The height of the header.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.rowHeight">
            <summary>
            Gets or sets the height of the row in the tableview controlled by this <see cref="T:ActionComponents.ACTableViewController"/> 
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.cellSelectionStyle">
            <summary>
            Gets or sets the cell selection style for items in this <see cref="T:ActionComponents.ACTableViewController"/>'s TableView
            </summary>
            <value>The cell selection style.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.dataSource">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACTableViewDataSource"/> for this
            <see cref="T:ActionComponents.ACTableViewController"/> 
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewController.tableDelegate">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACTableViewDelegate"/> for this
            <see cref="T:ActionComponents.ACTableViewController"/> 
            </summary>
            <value>The table delegate.</value>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="t">T.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="handle">Handle.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(System.String,Foundation.NSBundle)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="nibName">Nib name.</param>
            <param name="bundle">Bundle.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(UIKit.UITableViewStyle)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="withStyle">With style.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="frame">Frame.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.#ctor(UIKit.UITableViewStyle,CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewController"/> class.
            </summary>
            <param name="withStyle">With style.</param>
            <param name="frame">Frame.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewController.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewController.LoadData">
            <summary>
            Causes this <see cref="T:ActionComponents.ACTableViewController"/> to populate it's TableView with
            data from the attached <see cref="T:ActionComponents.ACTableViewDataSource"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableViewController.ACTableItemSelectedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTableItem"/> has been selected by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewController.RaiseItemSelected(ActionComponents.ACTableItem)">
            <summary>
            Raises the item selected event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableViewController.AccessoryButtonTappedDelegate">
            <summary>
            Occurs when a <see cref="T:ActionComponents.ACTableItem"/>'s accessory button is tapped
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewController.RaiseAccessoryButtonTapped(ActionComponents.ACTableItem)">
            <summary>
            Raises the accessory button tapped event
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="T:ActionComponents.ACTableViewController.DidEndEditingDelegate">
            <summary>
            Occurs when editing has ended for the <see cref="T:ActionComponents.ACTableItem"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewController.RaiseDidEndEditing(ActionComponents.ACTableItem)">
            <summary>
            Raises the accessory button tapped event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableViewDataSource">
            <summary>
            The <see cref="T:ActionComponents.ACTableViewDataSource"/> provides all data to it's parent 
            <see cref="T:ActionComponents.ACTableViewController"/> via the controller's <c>RequestData</c> event. It maintains a collection of
            <see cref="T:ActionComponents.ACTableSection"/>s each containing a collection of <see cref="T:ActionComponents.ACTableItem"/>.
            As a result, you may never need to create a custom version of this class to support your <c>UITableViews</c> maintained by the
            <see cref="T:ActionComponents.ACTableViewController"/>. 
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACTableViewDataSource.controller">
            <summary>
            Gets the <see cref="T:ActionComponents.ACTableViewController"/> that this <see cref="T:ActionComponents.ACTableViewDataSource"/>
            is providing data for.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="P:ActionComponents.ACTableViewDataSource.sections">
            <summary>
            Gets the collection of <see cref="T:ActionComponents.ACTableSection"/> contained in this
            <see cref="T:ActionComponents.ACTableViewDataSource"/> 
            </summary>
            <value>The sections.</value>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewDataSource"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.#ctor(ActionComponents.ACTableViewController)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewDataSource"/> class.
            </summary>
            <param name="controller">Controller.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.LoadData">
            <summary>
            Requests that this <see cref="T:ActionComponents.ACTableViewDataSource"/> reloads all of the data from it's source
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.RemoveItemAt(System.Int32)">
            <summary>
            Removes the requested <see cref="T:ActionComponents.ACTableSection"/> from this <see cref="T:ActionComponents.ACTableViewDataSource"/>'s
            collection
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.Clear">
            <summary>
            Empties this <see cref="T:ActionComponents.ACTableViewDataSource"/>'s collection of <see cref="T:ActionComponents.ACTableSection"/>  
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.AddSection(ActionComponents.ACTableSection)">
            <summary>
            Adds the given <see cref="T:ActionComponents.ACTableSection"/> to this <see cref="T:ActionComponents.ACTableViewDataSource"/> 
            </summary>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.AddSection(System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableSection"/> and adds it to this <see cref="T:ActionComponents.ACTableViewDataSource"/>  
            </summary>
            <returns>The section.</returns>
            <param name="header">Header.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.AddSection(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableSection"/> and adds it to this <see cref="T:ActionComponents.ACTableViewDataSource"/>  
            </summary>
            <returns>The section.</returns>
            <param name="header">Header.</param>
            <param name="footer">Footer.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.AddSection(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACTableSection"/> and adds it to this <see cref="T:ActionComponents.ACTableViewDataSource"/>  
            </summary>
            <returns>The section.</returns>
            <param name="header">Header.</param>
            <param name="footer">Footer.</param>
            <param name="sectionCellID">Section cell I.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.TitleForHeader(UIKit.UITableView,System.nint)">
            <Docs>Table view containing the section.</Docs>
            <summary>
            Called to populate the header for the specified section.
            </summary>
            <see langword="null"></see>
            <returns>The for header.</returns>
            <param name="tableView">Table view.</param>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.TitleForFooter(UIKit.UITableView,System.nint)">
            <Docs>Table view containing the section.</Docs>
            <summary>
            Called to populate the footer for the specified section.
            </summary>
            <see langword="null"></see>
            <returns>The for footer.</returns>
            <param name="tableView">Table view.</param>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.RowsInSection(UIKit.UITableView,System.nint)">
            <Docs>To be added.</Docs>
            <summary>
            Rowses the in section.
            </summary>
            <returns>The in section.</returns>
            <param name="tableview">Tableview.</param>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.NumberOfSections(UIKit.UITableView)">
            <Docs>Table view displaying the sections.</Docs>
            <returns>Number of sections required to display the data. The default is 1 (a table must have at least one section).</returns>
            <summary>
            Numbers the of sections.
            </summary>
            <param name="tableView">Table view.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.GetCell(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view requesting the cell.</Docs>
            <summary>
            Gets the cell.
            </summary>
            <returns>The cell.</returns>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="T:ActionComponents.ACTableViewDataSource.DataSourceRequestDataDelegate">
            <summary>
            Occurres when this <see cref="T:ActionComponents.ACTableViewDataSource"/> needs to be populated with data
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewDataSource.RaiseRequestData">
            <summary>
            Raises the request data event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTableViewDelegate">
            <summary>
            The <see cref="T:ActionComponents.ACTableViewDelegate"/> handles all user interaction with the <c>UITableView</c> being controlled by it's parent
            <see cref="T:ActionComponents.ACTableViewController"/>. Events are processed and passed to the 
            <see cref="T:ActionComponents.ACTableSection"/>s and <see cref="T:ActionComponents.ACTableItem"/>s contained within the
            <see cref="T:ActionComponents.ACTableViewController"/>'s <see cref="T:ActionComponents.ACTableViewDataSource"/>. As a result
            you may never need to create a custom version of this class to support your <c>UITableViews</c>.
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACTableViewDelegate.controller">
            <summary>
            Gets the <see cref="T:ActionComponents.ACTableViewController"/> that this <see cref="T:ActionComponents.ACTableViewDelegate"/>
            is attached to.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewDelegate"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.#ctor(ActionComponents.ACTableViewController)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACTableViewDelegate"/> class.
            </summary>
            <param name="controller">Controller.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.AccessoryButtonTapped(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>The table view containing the row/cell accessory that has been tapped.</Docs>
            <summary>
            Accessories the button tapped.
            </summary>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.CanPerformAction(UIKit.UITableView,ObjCRuntime.Selector,Foundation.NSIndexPath,Foundation.NSObject)">
            <Docs>Table view containing the row.</Docs>
            <see cref="M:MonoTouch.UIKit.UIResponder.Copy(MonoTouch.Foundation.NSObject)"></see>
            <see cref="M:MonoTouch.UIKit.UIResponder.Paste(MonoTouch.Foundation.NSObject)"></see>
            <param name="indexPath">Location of the row.</param>
            <summary>
            Whether the editing menu should omit the Copy or Paste command for the specified row.
            </summary>
            <see langword="true"></see>
            <paramref name="action"></paramref>
            <see langword="false"></see>
            <see langword="false"></see>
            <returns><c>true</c> if this instance can perform action the specified tableView action indexPath sender; otherwise, <c>false</c>.</returns>
            <param name="tableView">Table view.</param>
            <param name="action">Action.</param>
            <param name="sender">Sender.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.DidEndEditing(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view being edited.</Docs>
            <summary>
            Dids the end editing.
            </summary>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.EditingStyleForRow(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view that is going to be editable.</Docs>
            <summary>
            Called for each row being displayed by the table view, to determine what editing style to use for that row.
            </summary>
            <paramref name="indexPath"></paramref>
            <remarks>When the table view enters editing mode, this method allows the editing style to be set for each row.</remarks>
            <see cref="T:MonoTouch.UIKit.UITableViewCell"></see>
            <see cref="P:MonoTouch.UIKit.UITableViewCell.Editing"></see>
            <see langword="true"></see>
            <see cref="F:MonoTouch.UIKit.UITableViewCellEditingStyle.Delete"></see>
            <returns>The style for row.</returns>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.GetHeightForFooter(UIKit.UITableView,System.nint)">
            <Docs>Table view.</Docs>
            <summary>
            Gets the height for footer.
            </summary>
            <returns>The height for footer.</returns>
            <param name="tableView">Table view.</param>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.GetHeightForHeader(UIKit.UITableView,System.nint)">
            <Docs>Table view.</Docs>
            <summary>
            Gets the height for header.
            </summary>
            <returns>The height for header.</returns>
            <param name="tableView">Table view.</param>
            <param name="section">Section.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.GetHeightForRow(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view.</Docs>
            <summary>
            Gets the height for row.
            </summary>
            <returns>The height for row.</returns>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.RowSelected(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view containing the row.</Docs>
            <summary>
            Rows the selected.
            </summary>
            <param name="tableView">Table view.</param>
            <param name="indexPath">Index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.ShouldHighlightRow(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>To be added.</Docs>
            <summary>
            To be added.
            </summary>
            <remarks>To be added.</remarks>
            <returns><c>true</c>, if highlight row was shoulded, <c>false</c> otherwise.</returns>
            <param name="tableView">Table view.</param>
            <param name="rowIndexPath">Row index path.</param>
        </member>
        <member name="M:ActionComponents.ACTableViewDelegate.ShouldShowMenu(UIKit.UITableView,Foundation.NSIndexPath)">
            <Docs>Table view containing the row.</Docs>
            <summary>
            Shoulds the show menu.
            </summary>
            <returns><c>true</c>, if show menu was shoulded, <c>false</c> otherwise.</returns>
            <param name="tableView">Table view.</param>
            <param name="rowAtindexPath">Row atindex path.</param>
        </member>
        <member name="T:ActionComponents.ACTray">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> is a dockable, customizable, slide-out <see cref="!:MonoTouch.UIKit.UIView"/> controller
            with a <c>dragTab</c> that can be attached to the edge of any parent <see cref="!:MonoTouch.UIKit.UIView"/>. The <see cref="T:ActionComponents.ACTray"/> handles
            sliding the attached <see cref="!:MonoTouch.UIKit.UIView"/> based on the <see cref="T:ActionComponents.ACTrayType"/>. The <see cref="T:ActionComponents.ACTray"/> 
            can either be created in a .xib file in Xcode or manually in C# code.
            </summary>
            <description>The <see cref="T:ActionComponents.ACTray"/> can be styled by setting its <see cref="T:ActionComponents.ACTrayAppearance"/>
            and <see cref="T:ActionComponents.ACTrayTabType"/> properties. You can also control the position of the <c>dragTab</c> by setting the tray's
            <see cref="T:ActionComponents.ACTrayTabLocation"/>, <c>tabOffset</c> and <c>tabWidth</c> properties.</description>
            <remarks>WARNING! You MUST manually set the <see cref="T:ActionComponents.ACTray"/>'s <see cref="T:ActionComponents.ACTrayOrientation"/> 
            when the <see cref="!:MonoTouch.UIKit.UIView"/> first loads or the tray will not display or behave correctly.</remarks>
        </member>
        <member name="F:ActionComponents.ACTray.tag">
            <summary>
            [OPTIONAL] Tag to hold user information about this control
            </summary>
        </member>
        <member name="F:ActionComponents.ACTray.bringToFrontOnTouch">
            <summary>
            If <c>true</c> the <see cref="T:ActionComponents.ACTray"/> becomes the top most view
            when it is touched by the user
            </summary>
        </member>
        <member name="P:ActionComponents.ACTray.isClosed">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACTray"/> is closed.
            </summary>
            <value><c>true</c> if is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTray.isOpened">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACTray"/> is opened.
            </summary>
            <value><c>true</c> if is opened; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTray.dragging">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACTray"/> is dragging.
            </summary>
            <value><c>true</c> if dragging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACTray.orientation">
            <summary>
            Gets or sets the orientation of this <see cref="T:ActionComponents.ACTray"/> on the screen
            </summary>
            <value>The tray's orientation.</value>
            <remarks>This property controls how the <see cref="T:ActionComponents.ACTray"/> responds to user
            interaction and where the <c>dragTab</c> is located</remarks>
        </member>
        <member name="P:ActionComponents.ACTray.amountVisible">
            <summary>
            Gets the current amount of the <see cref="T:ActionComponents.ACTray"/>'s <c>ContentArea</c> that is 
            currently visible on screen
            </summary>
            <value>The amount of the <c>ContentArea</c> that is currently visible</value>
            <remarks>NOTE: This amount excludes the always visible <c>DragTab</c> </remarks>
        </member>
        <member name="P:ActionComponents.ACTray.tabLocation">
            <summary>
            Gets or sets the location of the <c>dragTab></c> on this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The tab location.</value>
            <remarks>This property interacts with the <see cref="T:ActionComponents.ACTrayOrientation"/> property</remarks>
        </member>
        <member name="P:ActionComponents.ACTray.tabType">
            <summary>
            Gets or sets the type of the <c>dragTab</c> drawn on this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The type of the tab.</value>
            <remarks>The <see cref="T:ActionComponents.ACTrayAppearance"/> also controls the appearance of the <c>dragTab</c> </remarks>
        </member>
        <member name="P:ActionComponents.ACTray.frameType">
            <summary>
            Gets or sets the type of the frame drawn around the edge of this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The type of the frame.</value>
            <remarks>This property reacts with the <see cref="T:ActionComponents.ACTrayOrientation"/> property to
            control the appearance and the location of the frame</remarks>
        </member>
        <member name="P:ActionComponents.ACTray.tabOffset">
            <summary>
            Gets or sets the tab offset for a <c>Custom</c> <see cref="T:ActionComponents.ACTrayTabLocation"/> 
            </summary>
            <value>The tab offset.</value>
            <remarks>Based on the <see cref="T:ActionComponents.ACTray"/>'s <see cref="T:ActionComponents.ACTrayOrientation"/>, the offset will
            either be from the tray's top or left side</remarks>
        </member>
        <member name="P:ActionComponents.ACTray.tabWidth">
            <summary>
            Gets or sets the width of the <c>dragTab</c> for this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The width of the tab.</value>
            <remarks>The minimum width is 30 pixels.</remarks>
        </member>
        <member name="P:ActionComponents.ACTray.icon">
            <summary>
            Gets or sets the icon displayed on the <c>dragTab</c> of this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The icon.</value>
            <remarks>The icon will be displayed based on the <c>dragTab</c>'s <see cref="T:ActionComponents.ACTrayTabType"/>  </remarks>
        </member>
        <member name="P:ActionComponents.ACTray.title">
            <summary>
            Gets or sets the title for the <see cref="T:ActionComponents.ACTray"/>'s <c>dragTab</c> 
            </summary>
            <value>The title.</value>
            <remarks>This title will be displayed based on the <c>dragTab</c>'s <see cref="T:ActionComponents.ACTrayTabType"/>  </remarks>
        </member>
        <member name="P:ActionComponents.ACTray.appearance">
            <summary>
            Controlls the general appearance of the control
            </summary>
        </member>
        <member name="P:ActionComponents.ACTray.trayType">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACTrayType"/> of this <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <value>The type of the tray.</value>
        </member>
        <member name="P:ActionComponents.ACTray.background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACTray.border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACTray.shadow">
            <summary>
            Gets or sets the shadow color
            </summary>
            <value>The shadow color</value>
        </member>
        <member name="P:ActionComponents.ACTray.frameColor">
            <summary>
            Gets or sets the frame color
            </summary>
            <value>The frame color</value>
        </member>
        <member name="P:ActionComponents.ACTray.thumbBackground">
            <summary>
            Gets or sets the thumb background.
            </summary>
            <value>The thumb background.</value>
        </member>
        <member name="P:ActionComponents.ACTray.thumbBorder">
            <summary>
            Gets or sets the thumb border.
            </summary>
            <value>The thumb border.</value>
        </member>
        <member name="P:ActionComponents.ACTray.tabAlpha">
            <summary>
            Gets or sets the thumb aplha.
            </summary>
            <value>The thumb aplha.</value>
        </member>
        <member name="P:ActionComponents.ACTray.gripBackground">
            <summary>
            Gets or sets the grip background.
            </summary>
            <value>The grip background.</value>
        </member>
        <member name="P:ActionComponents.ACTray.gripBorder">
            <summary>
            Gets or sets the grip border.
            </summary>
            <value>The grip border.</value>
        </member>
        <member name="P:ActionComponents.ACTray.thumbBlendMode">
            <summary>
            Gets or sets the thumb blend mode.
            </summary>
            <value>The thumb blend mode.</value>
        </member>
        <member name="P:ActionComponents.ACTray.titleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
        </member>
        <member name="P:ActionComponents.ACTray.titleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>The size of the title.</value>
        </member>
        <member name="P:ActionComponents.ACTray.flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACTrayAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 degisn language</remarks>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor(Foundation.NSCoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class.
            </summary>
            <param name="coder">Coder.</param>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor(Foundation.NSObjectFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class.
            </summary>
            <param name="flag">Flag.</param>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor(CoreGraphics.CGRect)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class.
            </summary>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class.
            </summary>
            <param name="ptr">Ptr.</param>
        </member>
        <member name="M:ActionComponents.ACTray.#ctor(ActionComponents.ACTrayAppearance)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTray"/> class
            with the user provided appearance
            </summary>
            <param name="appearance">The user specified appearance for the control</param>
        </member>
        <member name="M:ActionComponents.ACTray.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.OnDoubleTap(UIKit.UIGestureRecognizer)">
            <summary>
            Handles the <see cref="T:ActionComponents.ACTray"/> being double tapped
            </summary>
            <param name="sender">Sender.</param>
        </member>
        <member name="M:ActionComponents.ACTray.AddBlur(UIKit.UIBlurEffectStyle,System.Boolean)">
            <summary>
            WARNING Experimental Feature! Adds a <c>UIVisualEffect</c> to the given tray with a couple of limitations. It can only be called after the tray
            has been displayed and is only effective for trays that don't change size. The thumb style will be switched to
            square to accomodate the blur effect and right now the whole thing looks a bit clunky. Use at own risk... mileage may vary.
            </summary>
            <param name="style">Style.</param>
        </member>
        <member name="M:ActionComponents.ACTray.OpenTray(System.Boolean)">
            <summary>
            Opens the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <param name="animated">If set to <c>true</c> animated.</param>
        </member>
        <member name="M:ActionComponents.ACTray.AnimationCompleted">
            <summary>
            Handles the finalization of an opened or closed animation
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.CloseTray(System.Boolean)">
            <summary>
            Closes the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <param name="animated">If set to <c>true</c> animated.</param>
        </member>
        <member name="M:ActionComponents.ACTray.MoveTo(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACTray"/> to the given location 
            </summary>
            <param name="point">Point.</param>
        </member>
        <member name="M:ActionComponents.ACTray.CalculateWidth(UIKit.UIView)">
            <summary>
            Calculates the width based on the current device orientation
            </summary>
            <returns>The width.</returns>
            <param name="view">View.</param>
        </member>
        <member name="M:ActionComponents.ACTray.CalculateHeight(UIKit.UIView)">
            <summary>
            CCalculates the height based on the current device orientation
            </summary>
            <returns>The height.</returns>
            <param name="view">View.</param>
        </member>
        <member name="M:ActionComponents.ACTray.CalculateOpenAndClosedPositions">
            <summary>
            Calculates the open and closed positions for the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>This method is called when the <see cref="T:ActionComponents.ACTrayOrientation"/> changes and when
            the device is rotated.</remarks>
        </member>
        <member name="M:ActionComponents.ACTray.MoveTray(CoreGraphics.CGPoint)">
            <summary>
            Moves the tray to the given location
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACTray.CalculateTabposition(CoreGraphics.CGRect)">
            <summary>
            Calculates the <c>dragTab</c> position.
            </summary>
            <returns>The tab position.</returns>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawMarker(System.Single,System.Single)">
            <summary>
            Draws the marker.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DegreesToRadians(System.nfloat)">
            <summary>
            Degreeses to radians.
            </summary>
            <returns>The to radians.</returns>
            <param name="x">The x coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawTextRotated(System.String,System.nfloat,System.nfloat,System.nfloat)">
            <summary>
            Draws the text rotated.
            </summary>
            <param name="text">Text.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="rotDegree">Rot degree.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawLeftTray(CoreGraphics.CGRect)">
            <summary>
            Draws the left tray.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawRightTray(CoreGraphics.CGRect)">
            <summary>
            Draws the right tray.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawTopTray(CoreGraphics.CGRect)">
            <summary>
            Draws the top tray.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.DrawBottomTray(CoreGraphics.CGRect)">
            <summary>
            Draws the bottom tray.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.Draw(CoreGraphics.CGRect)">
            <summary>
            Draw the specified rect.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACTray.LayoutSubviews">
            <Docs>Lays out subviews.</Docs>
            <summary>
            Layouts the subviews.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)">
            <summary>
            Tests to see if the given point is inside this <see cref="T:ActionComponents.ACTray"/>. 
            </summary>
            <returns><c>true</c>, if inside was pointed, <c>false</c> otherwise.</returns>
            <param name="point">Point.</param>
            <param name="uievent">Uievent.</param>
            <remarks>A point is considered inside only if it is in the <see cref="T:ActionComponents.ACTray"/>'s <c>contentArea</c> or <c>dragTab</c>. It
            excludes the invisible strip on either side of the control.</remarks>
        </member>
        <member name="M:ActionComponents.ACTray.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)">
            <summary>
            Tests to see if this <see cref="T:ActionComponents.ACTray"/> or any of it's <c>subviews</c> were hit during an event
            </summary>
            <returns>The test.</returns>
            <param name="point">Point.</param>
            <param name="uievent">Uievent.</param>
            <remarks>If this is an auto closing type of <see cref="T:ActionComponents.ACTray"/> a touch inside it's
            content area will force to tray closed</remarks>
        </member>
        <member name="M:ActionComponents.ACTray.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACTray.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            To be added.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACTray.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACTray.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when the touch processing has been cancelled.
            </summary>
            <para>This method is typically involved because the application
             was interrupted by an external source, like for example,
             an incoming phone call.</para>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACTray.Dispose(System.Boolean)">
            <summary>
            Dispose the specified disposing.
            </summary>
            <param name="disposing">If set to <c>true</c> disposing.</param>
        </member>
        <member name="T:ActionComponents.ACTray.ACTrayTouchDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is touched
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTray.ACTrayMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseMoved">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTray.ACTrayReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> was <c>Touched</c> and released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseReleased">
            <summary>
            Raises the released event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTray.ACTrayOpenedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is opened fully by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseOpened">
            <summary>
            Raises the opened.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTray.ACTrayClosedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is completely closed by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseClosed">
            <summary>
            Raises the closed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTray.CustomDrawDragTabDelegate">
            <summary>
            Occurs when the <see cref="T:ActionComponents.ACTrayTabType"/> is set to <c>CustomDrawn</c> and the <c>dragTab</c>
            needs to be drawn
            </summary>
            <remarks>The passed <c>rect</c> contains the boundary that the custom tab should be drawn against</remarks>
        </member>
        <member name="M:ActionComponents.ACTray.RaiseCustomDrawDragTab(CoreGraphics.CGRect)">
            <summary>
            Raises the custom draw drag tab event
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="T:ActionComponents.ACTrayAppearance">
            <summary>
            Controls the appearance of a <see cref="T:ActionComponents.ACTray"/> with properties such as 
            background color, border color, and shadow color.
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACTrayAppearance"/> also controls the appearance of the
            <see cref="T:ActionComponents.ACTray"/>'s <c>dragTab</c>.</remarks>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.shadow">
            <summary>
            Gets or sets the shadow color
            </summary>
            <value>The shadow color</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.frame">
            <summary>
            Gets or sets the frame color
            </summary>
            <value>The frame color</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.thumbBackground">
            <summary>
            Gets or sets the thumb background.
            </summary>
            <value>The thumb background.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.thumbBorder">
            <summary>
            Gets or sets the thumb border.
            </summary>
            <value>The thumb border.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.tabAlpha">
            <summary>
            Gets or sets the thumb aplha.
            </summary>
            <value>The thumb aplha.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.gripBackground">
            <summary>
            Gets or sets the grip background.
            </summary>
            <value>The grip background.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.gripBorder">
            <summary>
            Gets or sets the grip border.
            </summary>
            <value>The grip border.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.thumbBlendMode">
            <summary>
            Gets or sets the thumb blend mode.
            </summary>
            <value>The thumb blend mode.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.titleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.titleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>The size of the title.</value>
        </member>
        <member name="P:ActionComponents.ACTrayAppearance.flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACTrayAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 degisn language</remarks>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTrayAppearance"/> class and
            sets the default appearance for the control
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTrayAppearance"/> class with
            the specified user defined appearance properties
            </summary>
            <param name="background">The control's background color</param>
            <param name="border">The control's border color</param>
            <param name="shadow">The control's shadow color</param>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.Flatten">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.Flatten(UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.Flatten(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="foregroundColor">Foreground color.</param>
        </member>
        <member name="T:ActionComponents.ACTrayAppearance.AppearanceModifiedDelegate">
            <summary>
            Occurs when the appearance is modified.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayAppearance.RaiseAppearanceModified">
            <summary>
            Raises the appearance modified event
            </summary>
            <remarks>Used to inform the attached component that an appearance 
            attribute has been modified</remarks>
        </member>
        <member name="T:ActionComponents.ACTrayFrameType">
            <summary>
            Controls the frame drawn around a <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>The frame interacts with the <see cref="T:ActionComponents.ACTrayOrientation"/> property</remarks>
        </member>
        <member name="F:ActionComponents.ACTrayFrameType.None">
            <summary>
            No frame will be drawn around the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>The <c>dragTab</c> will be drawn in the <see cref="T:ActionComponents.ACTray"/>'s 
            <see cref="T:ActionComponents.ACTrayAppearance"/> <c>background</c> color </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayFrameType.EdgeOnly">
            <summary>
            Only the edge of the <see cref="T:ActionComponents.ACTray"/> containing the <c>dragTab</c>
            will be framed
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACTrayOrientation"/> controls which edge gets the frame </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayFrameType.EdgeAndSides">
            <summary>
            All edges of the <see cref="T:ActionComponents.ACTray"/> except the back one will receive the frame 
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACTrayOrientation"/> defines the back edge of the 
            <see cref="T:ActionComponents.ACTray"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayFrameType.FullFrame">
            <summary>
            All edges of the <see cref="T:ActionComponents.ACTray"/> will receive the frame 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayManager">
            <summary>
            The <see cref="T:ActionComponents.ACTrayManager"/> controls a collection of <see cref="T:ActionComponents.ACTray"/>s and manages them like
            a set of palettes or menus. Only one <see cref="T:ActionComponents.ACTray"/> in the collection can be open at one time. The
            <see cref="T:ActionComponents.ACTrayManager"/> defines events that can be handled based on the user's interaction with any <see cref="T:ActionComponents.ACTray"/> 
            in the group.
            </summary>
            <remarks>The <see cref="T:ActionComponents.ACTrayManager"/> will automatically close any open <see cref="T:ActionComponents.ACTray"/> when another tray
            in the group is opened.</remarks>
        </member>
        <member name="P:ActionComponents.ACTrayManager.count">
            <summary>
            Returns the number of <see cref="T:ActionComponents.ACTray"/>s that this <see cref="T:ActionComponents.ACTrayManager"/> is controlling
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ActionComponents.ACTrayManager.trays">
            <summary>
            Returns the collection of <see cref="T:ActionComponents.ACTray"/>s that this <see cref="T:ActionComponents.ACTrayManager"/> is controlling  
            </summary>
            <value>The trays.</value>
        </member>
        <member name="M:ActionComponents.ACTrayManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACTrayManager"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.AddTray(ActionComponents.ACTray)">
            <summary>
            Adds the <see cref="T:ActionComponents.ACTray"/> to this <see cref="T:ActionComponents.ACTrayManager"/>'s
            collection
            </summary>
            <param name="tray">The <see cref="T:ActionComponents.ACTray"/> to add </param>
        </member>
        <member name="M:ActionComponents.ACTrayManager.Tray(System.Int32)">
            <summary>
            Returns the requested <see cref="T:ActionComponents.ACTray"/> at the given <c>index</c> from this 
            <see cref="T:ActionComponents.ACTrayManager"/>'s collection 
            </summary>
            <param name="index">Index.</param>
            <returns>The requested <see cref="T:ActionComponents.ACTray"/> or <c>null</c> if the <c>index</c> is out of range</returns>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RemoveTray(System.Int32)">
            <summary>
            Removes the <see cref="T:ActionComponents.ACTray"/> at the given <c>index</c> from this <see cref="T:ActionComponents.ACTrayManager"/>'s
            collection
            </summary>
            <param name="index">Index.</param>
            <remarks>This method is ignored if the <c>index</c> is out of range</remarks>
        </member>
        <member name="M:ActionComponents.ACTrayManager.CloseAllTrays">
            <summary>
            Closes all open <see cref="T:ActionComponents.ACTray"/> in this <see cref="T:ActionComponents.ACTrayManager"/>'s collection  
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.CloseOtherOpenTrays(ActionComponents.ACTray)">
            <summary>
            Closes any other open <see cref="T:ActionComponents.ACTray"/>s in this <see cref="T:ActionComponents.ACTrayManager"/>
            collection when another tray in this collection is opened or moved.
            </summary>
            <param name="tray">Tray.</param>
        </member>
        <member name="T:ActionComponents.ACTrayManager.ACTrayTouchDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is touched
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RaiseTrayTouched(ActionComponents.ACTray)">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayManager.ACTrayMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RaiseTrayMoved(ActionComponents.ACTray)">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayManager.ACTrayReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> was <c>Touched</c> and released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RaiseTrayReleased(ActionComponents.ACTray)">
            <summary>
            Raises the released event
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayManager.ACTrayOpenedDelegate">
            <summary>
            Occurs when any <see cref="T:ActionComponents.ACTray"/> in this <see cref="T:ActionComponents.ACTrayManager"/>'s collection
            is opened fully by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RaiseTrayOpened(ActionComponents.ACTray)">
            <summary>
            Raises the opened.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayManager.ACTrayClosedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACTray"/> is completely closed by the user
            </summary>
        </member>
        <member name="M:ActionComponents.ACTrayManager.RaiseTrayClosed(ActionComponents.ACTray)">
            <summary>
            Raises the closed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayOrientation">
            <summary>
            Defines the orientation of the <see cref="T:ActionComponents.ACTray"/> within the screen
            </summary>
            <remarks>This property also controls how the <see cref="T:ActionComponents.ACTray"/> responds to user interaction and where
            the <c>dragTab</c> is located</remarks>
        </member>
        <member name="F:ActionComponents.ACTrayOrientation.Top">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> is at the top of the screen 
            </summary>
            <remarks>The <c>dragTab</c> will be drawn at the bottom of the <see cref="T:ActionComponents.ACTray"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayOrientation.Bottom">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> is at the bottom of the screen
            </summary>
            <remarks>The <c>dragTab</c> will be drawn at the top of the <see cref="T:ActionComponents.ACTray"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayOrientation.Left">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> is on the left side of the screen 
            </summary>
            <remarks>The <c>dragTab</c> will be drawn on the right side of the <see cref="T:ActionComponents.ACTray"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayOrientation.Right">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> is on the ride side of the screen
            </summary>
            <remarks>The <c>dragTab</c> will be drawn on the left side of the <see cref="T:ActionComponents.ACTray"/> </remarks>
        </member>
        <member name="T:ActionComponents.ACTrayTabLocation">
            <summary>
            Controls where the <c>dragTab</c> is located on the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>This location also interacts with the <see cref="T:ActionComponents.ACTrayOrientation"/> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayTabLocation.TopOrLeft">
            <summary>
            The <c>dragTab</c> will be either on the top or left side of the <see cref="T:ActionComponents.ACTray"/> based on its
            <see cref="T:ActionComponents.ACTrayOrientation"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabLocation.Middle">
            <summary>
            The <c>dragTab</c> will be in the middle of the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabLocation.BottomOrRight">
            <summary>
            The <c>dragTab</c> will be either on the bottom or the right side of the <see cref="T:ActionComponents.ACTray"/> based on its
            <see cref="T:ActionComponents.ACTrayOrientation"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabLocation.Custom">
            <summary>
            The <c>dragTab</c> position will be based on a user defined <c>tabOffset</c> on the side of the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>Based on the <see cref="T:ActionComponents.ACTray"/>'s <see cref="T:ActionComponents.ACTrayOrientation"/>, the
            <c>tabOffset</c> will be measured from the top or left side of the tray</remarks>
        </member>
        <member name="T:ActionComponents.ACTrayTabType">
            <summary>
            Defines the type of <c>dragTab</c> for the given <see cref="T:ActionComponents.ACTray"/> 
            </summary>
            <remarks>the <c>appearance</c> property of the <see cref="T:ActionComponents.ACTray"/> controls the look/feel of the <c>dragTab</c> </remarks>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.Plain">
            <summary>
            A <c>Plain</c> <c>dragTab</c> contains no grip area, icon or text
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.GripOnly">
            <summary>
            The <c>dragTab</c> contains only a three line grip area
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.GripAndTitle">
            <summary>
            The <c>dragTab</c> contains a three line grip and a title
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.TitleOnly">
            <summary>
            The <c>dragTab</c> contains only a title
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.IconOnly">
            <summary>
            The <c>dragTab</c> contains only an icon
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.IconAndTitle">
            <summary>
            The <c>dragTab</c> contains an icon and a title
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayTabType.CustomDrawn">
            <summary>
            Allow the user to custom draw the <c>dragTab</c> inside the specified <c>dragTabRectangleF</c> and <see cref="T:ActionComponents.ACTray"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACTrayType">
            <summary>
            Defines the user's interaction with the <see cref="T:ActionComponents.ACTray"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayType.Draggable">
            <summary>
            The <see cref="T:ActionComponents.ACTray"/> can be dragged by its <c>dragTab</c> between
            the specified <c>openedPosition</c> and <c>closedPosition</c>
            </summary>
            <remarks>Double tapping the <c>dragTab</c> will snap the <see cref="T:ActionComponents.ACTray"/> between its 
            <c>openedPosition</c> and <c>closedPosition</c></remarks>
        </member>
        <member name="F:ActionComponents.ACTrayType.Popup">
            <summary>
            When the user taps the <see cref="T:ActionComponents.ACTray"/>'s <c>dragTab</c>, the tray will snap between
            its <c>openedPosition</c> and <c>closedPosition</c>
            </summary>
        </member>
        <member name="F:ActionComponents.ACTrayType.AutoClosingPopup">
            <summary>
            When the user taps the <see cref="T:ActionComponents.ACTray"/>'s <c>dragTab</c>, the tray will snap between
            its <c>openedPostion</c> and <c>closedPostion</c>. If the tray is open and the user taps anywhere within its <c>content</c> area,
            the tray will automatically close.
            </summary>
        </member>
        <member name="T:ActionComponents.ACDownloadItem">
            <summary>
            Holds all information about a given file to be downloaded such as the URL and
            the destination directory. Events can be raised when the individual file has
            finished downloading for completed, canceled or on download error.
            </summary>
        </member>
        <member name="F:ActionComponents.ACDownloadItem.URL">
            <summary>
            The URL to download the file from
            </summary>
        </member>
        <member name="F:ActionComponents.ACDownloadItem.downloadDirectory">
            <summary>
            The directory to download the file to
            </summary>
        </member>
        <member name="F:ActionComponents.ACDownloadItem.destinationFilename">
            <summary>
            OPTIONAL: Specifies a new name for the file when it is downloaded
            </summary>
        </member>
        <member name="P:ActionComponents.ACDownloadItem.filename">
            <summary>
            Returns the filename of the URL currently being downloaded
            </summary>
            <value>
            The filename currently being downloaded or empty string ("") if no
            active download
            </value>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACDownloadItem"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACDownloadItem"/> class and sets
            the default values
            </summary>
            <param name="URL">The URL of the file to download</param>
            <param name="downloadDirectory">The directory that the file will be downloaded to</param>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACDownloadItem"/> class and sets
            the default values
            </summary>
            <param name="URL">The URL of the file to download</param>
            <param name="downloadDirectory">The directory that the file will be downloaded to</param>
            <param name="destinationFilename">Specifies a new name for the file when it is downloaded</param>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.RaiseDownloadError(System.String)">
            <summary>
            Raises the download error.
            </summary>
            <param name="message">The error message to report</param>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.RaiseDownloadCanceled(System.String)">
            <summary>
            Raises the download canceled.
            </summary>
            <param name="filename">The name of the file that the download is being canceled on</param>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.RaiseDownloadFileStarted(System.String)">
            <summary>
            Raises the download file started.
            </summary>
            <param name="filename">The name of the file that started downloading</param>
        </member>
        <member name="M:ActionComponents.ACDownloadItem.RaiseDownloadFileCompeted(System.String)">
            <summary>
            Raises the download file competed.
            </summary>
            <param name="filename">The name of the file that completed downloading</param>
        </member>
        <member name="T:ActionComponents.ACDownloadItem.DownloadErrorDelegate">
            <summary>
            Occurs when download error.
            </summary>
            <param name="message">
            Contains the error message that occurred while downloading this file
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadItem.DowloadCanceledDelegate">
            <summary>
            Occurs when download canceled.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadItem.DownloadFileStartedDelegate">
            <summary>
            Occurs when download file started.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadItem.DownloadFileCompletedDelegate">
            <summary>
            Occurs when download file completed.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager">
            <summary>
            This object handles the downloading of open of more files from the internet.
            It provides events for handling progress, suspension and restart, and error
            hanlding routines.
            </summary>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.abortOnError">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:ActionComponentsr.ACDownloadManager"/> aborts
            all active downloads on error.
            </summary>
            <value><c>true</c> if abort on error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.filesInQueue">
            <summary>
            Gets the number of files in queue.
            </summary>
            <value>
            The current file count
            </value>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.downloadingURL">
            <summary>
            Returns the URL of the file currently being downloaded
            </summary>
            <value>
            The URL of the file being downloaded or empty string ("") if no
            active download
            </value>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.downloadingFilename">
            <summary>
            Returns the filename of the URL currently being downloaded
            </summary>
            <value>
            The filename currently being downloaded or empty string ("") if no
            active download
            </value>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.isBusy">
            <summary>
            Gets a value indicating whether this <see cref="!:ActionComponentsr"/> is busy.
            </summary>
            <value>
            <c>true</c> if is busy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActionComponents.ACDownloadManager.isSuspended">
            <summary>
            Gets a value indicating whether this <see cref="!:ActionComponentsr"/> is suspended.
            </summary>
            <value>
            <c>true</c> if is suspended; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ActionComponentsr"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.ClearQueue">
            <summary>
            Clears the queue.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.QueueFile(System.String,System.String)">
            <summary>
            Adds the given download url and directory to the queue of files to download
            </summary>
            <param name='url'>
            The URL of the file to download
            </param>
            <param name="downloadDirectory">
            The directory to download the file to
            </param>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.QueueFile(System.String,System.String,System.String)">
            <summary>
            Adds the given download url and directory to the queue of files to download
            </summary>
            <param name='url'>
            The URL of the file to download
            </param>
            <param name="downloadDirectory">
            The directory to download the file to
            </param>
            <param name="destinationFilename">Specifies a new name for the file when it is downloaded</param>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.QueueFile(ActionComponents.ACDownloadItem)">
            <summary>
            Adds the given download item to the queue of files to download
            </summary>
            <param name="item">The download item to add</param>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.AbortDownload">
            <summary>
            Aborts the download.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.StartDownloading">
            <summary>
            Start downloading all files currently in the queue
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.SuspendDownload">
            <summary>
            Suspends the download of any currently active file
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.ResumeDownloading">
            <summary>
            Resumes the downloading of any suspended file download
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.PassesTrialLimits(System.String)">
            <summary>
            For the trial version of DownloadManage limit to only 5 files in a batch
            and only .jpg files. This function tests those conditions and informs the
            user if the file cannot be added to the queue
            </summary>
            <returns><c>true</c>, if the file meets trial limit conditions, <c>false</c> otherwise.</returns>
            <param name="URL">The source URL for the file to download</param>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.ReportOverallPercentComplete">
            <summary>
            Reports the overall percent complete.
            </summary>
        </member>
        <member name="M:ActionComponents.ACDownloadManager.DownloadNextFileInQueue">
            <summary>
            Downloads the next file in queue.
            </summary>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.AllDownloadsCompletedDelegate">
            <summary>
            Occurs when all downloads completed.
            </summary>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.DownloadErrorDelegate">
            <summary>
            Occurs when download error.
            </summary>
            <param name="message">
            Contains the error message that occurred while downloading this file
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.DowloadCanceledDelegate">
            <summary>
            Occurs when download canceled.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.DownloadFileStartedDelegate">
            <summary>
            Occurs when download file started.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.DownloadFileCompletedDelegate">
            <summary>
            Occurs when download file completed.
            </summary>
            <param name="filename">
            The name of the file that was currently being processed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.FileDownloadProgressPercentDelegate">
            <summary>
            Occurs when file download progress percent is updated.
            </summary>
            <param name="percentage">
            The decimal percentage from 0 to 1 that the process has completed
            </param>
        </member>
        <member name="T:ActionComponents.ACDownloadManager.OverallDownloadProgressPercentDelegate">
            <summary>
            Occurs when overall download progress percent is updated.
            </summary>
            <param name="percentage">
            The decimal percentage from 0 to 1 that the process has completed
            </param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> and displays it. If the user taps the alert,
            it will automatically close.
            </summary>
            <returns>The alert.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with the given buttons and displays it.
            </summary>
            <returns>The alert.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(UIKit.UIImage,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with the given buttons and displays it.
            </summary>
            <returns>The alert.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(ActionComponents.ACAlertLocation,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> and displays it at the given location. If the user taps the alert,
            it will automatically close.
            </summary>
            <returns>The alert.</returns>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(UIKit.UIImage,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> and displays it. If the user taps the alert,
            it will automatically close.
            </summary>
            <returns>The alert.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlert(ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> and displays it at the given location. If the user taps the alert,
            it will automatically close.
            </summary>
            <returns>The alert.</returns>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlertOK(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an OK button and displays it. If the user taps the OK button,
            the alert will automatically close.
            </summary>
            <returns>The alert</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlertOK(UIKit.UIImage,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an OK button and displays it. If the user taps the OK button,
            the alert will automatically close.
            </summary>
            <returns>The alert</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlertOKCancel(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an OK/Cancel buttons and displays it. If the user taps the OK button,
            the alert will automatically close.
            </summary>
            <returns>The alert OK cancel.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowAlertOKCancel(UIKit.UIImage,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an OK/Cancel buttons and displays it. If the user taps the OK button,
            the alert will automatically close.
            </summary>
            <returns>The alert OK cancel.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlert(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c> and displays it. 
            </summary>
            <returns>The activity alert.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlert(ActionComponents.ACAlertLocation,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c> and displays it.
            </summary>
            <returns>The activity alert.</returns>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlertCancel(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c>, a <c>Cancel</c> button and displays it.
            The alert will automatically close if the cancel button is tapped.
            </summary>
            <returns>The activity alert cancel.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlertCancel(ActionComponents.ACAlertLocation,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c>, a <c>Cancel</c> button and displays it.
            The alert will automatically close if the cancel button is tapped.
            </summary>
            <returns>The activity alert cancel.</returns>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlertMedium(System.String,System.Boolean)">
            <summary>
            Creates a new medium sized <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c> and displays it.
            </summary>
            <returns>The activity alert medium.</returns>
            <param name="title">Title.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowActivityAlertMediumCancel(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c>, a <c>Cancel</c> button and displays it.
            The alert will automatically close if the cancel button is tapped.
            </summary>
            <returns>The activity alert medium cancel.</returns>
            <param name="title">Title.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlert(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c> and displays it.
            </summary>
            <returns>The progress alert.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlert(UIKit.UIImage,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c> and displays it.
            </summary>
            <returns>The progress alert.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlert(ActionComponents.ACAlertLocation,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c> and displays it.
            </summary>
            <returns>The progress alert.</returns>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlert(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c> and displays it along with
            custom <see cref="T:ActionComponents.ACAlertButton"/>s for each button title provided
            </summary>
            <returns>The progress alert.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">A comma seperated list of Button titles.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlert(UIKit.UIImage,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c> and displays it along with
            custom <see cref="T:ActionComponents.ACAlertButton"/>s for each button title provided
            </summary>
            <returns>The progress alert.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">A comma seperated list of Button titles.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlertCancel(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c>, <c>Cancel</c> button and displays it.
            If the user presses the cancel button the alert will automatically close.
            </summary>
            <returns>The progress alert cancel.</returns>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.ShowProgressAlertCancel(UIKit.UIImage,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Progress Indicator</c>, <c>Cancel</c> button and displays it.
            If the user presses the cancel button the alert will automatically close.
            </summary>
            <returns>The progress alert cancel.</returns>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="modal">If set to <c>true</c> modal.</param>
        </member>
        <member name="P:ActionComponents.ACAlert.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.Overlay">
            <summary>
            Gets the overlay used to black out the screen for a modal <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The overlay.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.type">
            <summary>
            Gets the type of this <see cref="T:ActionComponents.ACAlert"/>
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.subview">
            <summary>
            Gets the subview attached to this <see cref="T:ActionComponents.ACAlert"/>
            </summary>
            <value>The subview.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.activityIndicator">
            <summary>
            Returns the embedded <c>Activity Indicator</c> for <c>ActivityAlert</c> types of <see cref="T:ActionComponents.ACAlert"/>s 
            </summary>
            <value>The activity indicator.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.progressView">
            <summary>
            Returns the embedded <c>Progress Indicator</c> for <c>ProgressAlert</c> types of <see cref="T:ActionComponents.ACAlert"/>s
            </summary>
            <value>The progress view.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.hidden">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACAlert"/> is hidden.
            </summary>
            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.icon">
            <summary>
            Gets or sets the icon displayed on this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.modal">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlert"/> is modal.
            </summary>
            <value><c>true</c> if modal; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.appearance">
            <summary>
            Gets or sets the appearance of this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.location">
            <summary>
            Gets the location of this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.buttonAppearance">
            <summary>
            Gets or sets the default <see cref="T:ActionComponents.ACAlertButtonAppearance"/> 
            </summary>
            <value>The button appearance.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.buttonAppearanceDisabled">
            <summary>
            Gets or sets the default disabled <see cref="T:ActionComponents.ACAlertButtonAppearance"/> 
            </summary>
            <value>The button appearance disabled.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.buttonAppearanceTouched">
            <summary>
            Gets or sets the touched button <see cref="T:ActionComponents.ACAlertButtonAppearance"/>
            </summary>
            <value>The button appearance touched.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.buttonAppearanceHighlighted">
            <summary>
            Gets or sets the default highlighted <see cref="T:ActionComponents.ACAlertButtonAppearance"/> 
            </summary>
            <value>The button appearance highlighted.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.title">
            <summary>
            Gets or sets the title of this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.description">
            <summary>
            Gets or sets the description of this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.Count">
            <summary>
            Gets the number of <see cref="T:ActionComponents.ACAlertButton"/>s in this <see cref="T:ActionComponents.ACAlert"/>  
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACAlertButton"/> at the specified index.
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="P:ActionComponents.ACAlert.draggable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACAlert"/>
            is draggable.
            </summary>
            <value><c>true</c> if is draggable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.dragging">
            <summary>
            Gets a value indicating whether this <see cref="T:ActionComponents.ACAlert"/> is being dragged by the user.
            </summary>
            <value><c>true</c> if dragging; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.bringToFrontOnTouched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACAlert"/>
            is automatically brought to the front when touched.
            </summary>
            <value><c>true</c> if bring to front on touched; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.xConstraint">
            <summary>
            Gets or sets the <see cref="!:Appracatappra.ActionComponents.ActionView.ACAlertDragConstraint"/> applied to the <c>x axis</c> of this
            <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The x constraint.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.yConstraint">
            <summary>
            Gets or sets the <see cref="!:Appracatappra.ActionComponents.ActionView.ACAlertDragConstraint"/> applied to the <c>y axis</c> of this
            <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <value>The y constraint.</value>
        </member>
        <member name="P:ActionComponents.ACAlert.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActionComponents.ACAlert"/>
            is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            <remarks>Enabling/disabling a <see cref="T:ActionComponents.ACAlert"/> automatically changes the value of it's
            <c>UserInteractionEnabled</c> flag</remarks>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,UIKit.UIView)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="subview">the subview attached to this</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,UIKit.UIView)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="subview">Subview.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,UIKit.UIView,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="subview">Subview.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">A comma seperated Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,System.String,UIKit.UIView,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="title">Title.</param>
            <param name="subview">Subview.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="description">Description.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.#ctor(ActionComponents.ACAlertType,ActionComponents.ACAlertLocation,UIKit.UIImage,System.String,UIKit.UIView,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlert"/> class.
            </summary>
            <param name="type">Type.</param>
            <param name="location">Location.</param>
            <param name="icon">Icon.</param>
            <param name="title">Title.</param>
            <param name="subview">Subview.</param>
            <param name="buttonTitles">Button titles.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Initialize">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.CascadeButtonAppearances(ActionComponents.ACAlertButtonApperanceType)">
            <summary>
            Cascades changes to the <see cref="T:ActionComponents.ACAlertButtonAppearance"/> to every
            <see cref="T:ActionComponents.ACAlertButton"/> in the alerts collection 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RepositionButtons">
            <summary>
            Repositions all of the <see cref="T:ActionComponents.ACAlertButton"/>s being controlled by this
            <see cref="T:ActionComponents.ACAlert"/>  
            </summary>
            <remarks>Called when a new button is added or an old one removed</remarks>
        </member>
        <member name="M:ActionComponents.ACAlert.CalculateAlertHeight">
            <summary>
            Calculates the height of the alert base on its type and the elements inside it
            </summary>
            <returns>The alert height.</returns>
        </member>
        <member name="M:ActionComponents.ACAlert.CalculateAlertWidth">
            <summary>
            Calculates the width of the alert based on its type and elements inside it
            </summary>
            <returns>The alert width.</returns>
        </member>
        <member name="M:ActionComponents.ACAlert.AdjustAlertPosition">
            <summary>
            Adjusts the alert position based on its content, style, and location
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.AdjustAlertPosition(UIKit.UIView)">
            <summary>
            Adjusts the alert position.
            </summary>
            <param name="view">View.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.XConstraintModified">
            <summary>
            Adjust this view if the <c>xConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.YConstraintModified">
            <summary>
            Adjust this view if the <c>yConstraint</c> has been modified
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.Show">
            <summary>
            Show this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.Show(UIKit.UIView,System.Boolean)">
            <summary>
            Show the <see cref="T:ActionComponents.ACAlert"/> in specified rootView and reposition if needed.
            </summary>
            <param name="rootView">Root view.</param>
            <param name="reposition">If set to <c>true</c> reposition.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Hide">
            <summary>
            Removes this <see cref="T:ActionComponents.ACAlert"/> from the screen
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.Flatten">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> and its <see cref="T:ActionComponents.ACAlertButton"/>s
            to match the new iOS 7 design language
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.Flatten(UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> and its <see cref="T:ActionComponents.ACAlertButton"/>s
            to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Flatten(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> and its <see cref="T:ActionComponents.ACAlertButton"/>s
            to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="foregroundColor">Foreground color.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Redraw">
            <summary>
            Forces the <see cref="T:ActionComponents.ACAlert"/> to redraw itself
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.AddButtons(System.String)">
            <summary>
            Takes a comma seperated string of button titles, creates a new <see cref="T:ActionComponents.ACAlertButton"/> for
            each title and adds them to this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <param name="buttonTitles">Button titles.</param>
            <remarks>The last button added will automatically be highlighted</remarks>
        </member>
        <member name="M:ActionComponents.ACAlert.AddButtons(System.String[])">
            <summary>
            Takes an array of titles and adds a new <see cref="T:ActionComponents.ACAlertButton"/> to this
            <see cref="T:ActionComponents.ACAlert"/> for each title in the array 
            </summary>
            <param name="titles">Titles.</param>
            <remarks>The last button added will automatically be highlighted</remarks>
        </member>
        <member name="M:ActionComponents.ACAlert.AddButton(System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:ActionComponents.ACAlertButton"/> to this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <returns>The new <see cref="T:ActionComponents.ACAlertButton"/> </returns>
            <param name="title">Title.</param>
            <param name="highlighted">If set to <c>true</c> highlighted.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.AddButton(ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:ActionComponents.ACAlertButton"/> to this <see cref="T:ActionComponents.ACAlert"/>  
            </summary>
            <returns>The new <see cref="T:ActionComponents.ACAlert"/> </returns>
            <param name="appearance">Appearance.</param>
            <param name="appearanceTouched">Appearance touched.</param>
            <param name="appearanceHighlighted">Appearance highlighted.</param>
            <param name="title">Title.</param>
            <param name="highlighted">If set to <c>true</c> highlighted.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.RemoveButtonAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActionComponents.ACAlertButton"/> at the given index from this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Clear">
            <summary>
            Removes all <see cref="T:ActionComponents.ACAlertButton"/>s from this <see cref="T:ActionComponents.ACAlert"/>  
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.MoveToPoint(System.Single,System.Single)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACAlert"/> to the given point and honors any
            <see cref="!:Appracatappra.ActionComponents.ActionView.ACAlertDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.MoveToPoint(CoreGraphics.CGPoint)">
            <summary>
            Moves this <see cref="T:ActionComponents.ACAlert"/> to the given point and honors any
            <see cref="!:Appracatappra.ActionComponents.ActionView.ACAlertDragConstraint"/>s applied to the <c>X</c> or <c>Y</c> axis 
            </summary>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Resize(System.Single,System.Single)">
            <summary>
            Resize this <see cref="T:ActionComponents.ACAlert"/> to the specified width and height.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.RotateTo(System.Single)">
            <summary>
            Rotates this <see cref="T:ActionComponents.ACAlert"/> to the given degrees
            </summary>
            <param name="degrees">Degrees.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.PointInside(System.nfloat,System.nfloat)">
            <summary>
            Tests to see if the given x and y coordinates are inside this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.PointInside(CoreGraphics.CGPoint)">
            <summary>
            Test to see if the given point is inside this <see cref="T:ActionComponents.ACAlert"/> 
            </summary>
            <returns><c>true</c>, if point was inside, <c>false</c> otherwise.</returns>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.SetCorner(UIKit.UIRectCorner,UIKit.UIRectCorner)">
            <summary>
            Sets the corner.
            </summary>
            <returns>The corner.</returns>
            <param name="corners">Corners.</param>
            <param name="addCorner">Add corner.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.DrawDefaultAlert(CoreGraphics.CGRect)">
            <summary>
            Draws the default alert.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.DrawActivityAlert(CoreGraphics.CGRect)">
            <summary>
            Draws the activity alert.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.Draw(CoreGraphics.CGRect)">
            <summary>
            Draw the specified rect.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when the <see cref="T:ActionComponents.ACAlert"/> is being dragged
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACAlert.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACAlert.ACAlertTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACAlert"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlert.ACAlertMovedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACAlert"/> is moved
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseMoved">
            <summary>
            Raises the moved event
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlert.ACAlertReleasedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACAlert"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseButtonTouched(ActionComponents.ACAlertButton)">
            <summary>
            Raises the ButtonTouched event.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseButtonReleased(ActionComponents.ACAlertButton)">
            <summary>
            Raises the ButtonTouched event.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlert.RaiseOverlayTouched">
            <summary>
            Raises the ButtonTouched event.
            </summary>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.activityIndicatorColor">
            <summary>
            Gets or sets the color of the activity indicator when running under iOS 7 or greater
            </summary>
            <value>The color of the activity indicator.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.borderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.borderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
            <value>The border radius.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.roundTopLeftCorner">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> round top left corner.
            </summary>
            <value><c>true</c> if round top left corner; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.roundTopRightCorner">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> round top right corner.
            </summary>
            <value><c>true</c> if round top right corner; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.roundBottomLeftCorner">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> round bottom left corner.
            </summary>
            <value><c>true</c> if round bottom left corner; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.roundBottomRightCorner">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> round bottom rightt corner.
            </summary>
            <value><c>true</c> if round bottom rightt corner; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.isRoundRect">
            <summary>
            Gets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> is a perfect round rect.
            </summary>
            <value><c>true</c> if is round rect; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.isRect">
            <summary>
            Gets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertAppearance"/> is a perfect rect.
            </summary>
            <value><c>true</c> if is rect; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.shadow">
            <summary>
            Gets or sets the shadow color
            </summary>
            <value>The shadow color</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.titleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.titleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>The size of the title.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.descriptionColor">
            <summary>
            Gets or sets the color of the description.
            </summary>
            <value>The color of the description.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.descriptionSize">
            <summary>
            Gets or sets the size of the description.
            </summary>
            <value>The size of the description.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.overlay">
            <summary>
            Gets or sets the overlay color
            </summary>
            <value>The overlay.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.overlayAlpha">
            <summary>
            Gets or sets the overlay alpha.
            </summary>
            <value>The overlay alpha.</value>
        </member>
        <member name="P:ActionComponents.ACAlertAppearance.flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 degisn language</remarks>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> class and
            sets the default appearance for the control
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.#ctor(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> class with
            the specified user defined appearance properties
            </summary>
            <param name="background">The control's background color</param>
            <param name="border">The control's border color</param>
            <param name="shadow">The control's shadow color</param>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.MakeRectangular">
            <summary>
            Makes the <see cref="T:ActionComponents.ACAlert"/> rectangular
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.MakeRoundRectangle">
            <summary>
            Makes the <see cref="T:ActionComponents.ACAlert"/> round rectangle.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.Flatten">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> to match the new iOS 7 design language
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.Flatten(UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.Flatten(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="T:ActionComponents.ACAlert"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="foregroundColor">Foreground color.</param>
        </member>
        <member name="T:ActionComponents.ACAlertAppearance.AppearanceModifiedDelegate">
            <summary>
            Occurs when the appearance is modified.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertAppearance.RaiseAppearanceModified">
            <summary>
            Raises the appearance modified event
            </summary>
            <remarks>Used to inform the attached component that an appearance 
            attribute has been modified</remarks>
        </member>
        <member name="T:ActionComponents.ACAlertButton">
            <summary>
            Holds all information about a <see cref="!:ActionControls.ACAlertButton"/> attached to a <see cref="!:ActionControls.ACAlert"/> 
            </summary>
        </member>
        <member name="P:ActionComponents.ACAlertButton.tag">
            <summary>
            Gets or sets the [OPTIONAL] tag that can be assosciated with this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.Enabled">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="!:ActionControls.ACAlertButton"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.title">
            <summary>
            Gets or sets the title for this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.appearance">
            <summary>
            Gets or sets the appearance of this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.appearanceDisabled">
            <summary>
            Gets or sets the appearance of this <see cref="!:ActionControls.ACAlertButton"/> when it is disabled
            </summary>
            <value>The appearance disabled.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.appearanceTouched">
            <summary>
            Gets or sets the touched appearance of this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <value>The appearance touched.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.appearanceHighlighted">
            <summary>
            Gets or sets the highlighted appearance of this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <value>The appearance highlighted.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButton.highlighted">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="!:ActionControls.ACAlertButton"/> is highlighted.
            </summary>
            <value><c>true</c> if highlighted; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ActionComponents.ACAlertButton.#ctor(ActionComponents.ACAlert,ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,ActionComponents.ACAlertButtonAppearance,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="!:ActionControls.ACAlertButton"/> class.
            </summary>
            <param name="alert">Alert.</param>
            <param name="appearance">Appearance.</param>
            <param name="appearanceHighlighted">Appearance highlighted.</param>
            <param name="title">Title.</param>
            <param name="highlighted">If set to <c>true</c> highlighted.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.SetButtonPosition(CoreGraphics.CGRect,System.Boolean,System.Boolean)">
            <summary>
            Sets the button position.
            </summary>
            <param name="frame">Frame.</param>
            <param name="bottomLeft">If set to <c>true</c> bottom left.</param>
            <param name="bottomRight">If set to <c>true</c> bottom right.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.Redraw">
            <summary>
            Causes this <see cref="!:ActionControls.ACAlertButton"/> to redraw itself 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButton.PointInside(System.nfloat,System.nfloat)">
            <summary>
            Tests to see if the given x and y coordinates are inside this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <returns><c>true</c>, if the point was inside, <c>false</c> otherwise.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.PointInside(CoreGraphics.CGPoint)">
            <summary>
            Test to see if the given point is inside this <see cref="!:ActionControls.ACAlertButton"/> 
            </summary>
            <returns><c>true</c>, if point was inside, <c>false</c> otherwise.</returns>
            <param name="pt">Point.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.Draw(CoreGraphics.CGRect)">
            <summary>
            Draw the specified rect.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButton.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Send when one or more fingers are lifted from the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACAlertButton.ACAlertButtonTouchedDelegate">
            <summary>
            Occurs when this <see cref="!:ActionControls.ACAlert"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButton.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertButton.ACAlertButtonReleasedDelegate">
            <summary>
            Occurs when this <see cref="!:ActionControls.ACAlert"/> is released 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButton.RaiseReleased">
            <summary>
            Raises the released.
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertButtonAppearance">
            <summary>
            Controls the appearance of a <see cref="T:ActionComponents.ACAlertButton"/> 
            </summary>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.background">
            <summary>
            Gets or sets the background color
            </summary>
            <value>The background color</value>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.border">
            <summary>
            Gets or sets the border color
            </summary>
            <value>The border color</value>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.borderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.titleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.titleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>The size of the title.</value>
        </member>
        <member name="P:ActionComponents.ACAlertButtonAppearance.flat">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ActionComponents.ACAlertButtonAppearance"/> is flat.
            </summary>
            <value><c>true</c> if flat; otherwise, <c>false</c>.</value>
            <remarks>This value was added to support the iOS 7 degisn language</remarks>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> class and
            sets the default appearance for the control
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.#ctor(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> class with
            the specified user defined appearance properties
            </summary>
            <param name="background">The control's background color</param>
            <param name="border">The control's border color</param>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.#ctor(UIKit.UIColor,UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACAlertButtonAppearance"/> class.
            </summary>
            <param name="background">Background.</param>
            <param name="border">Border.</param>
            <param name="textColor">Text color.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.Flatten">
            <summary>
            Flattens the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.Flatten(UIKit.UIColor)">
            <summary>
            Flattens the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.Flatten(UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="borderColor">Border color.</param>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.Flatten(UIKit.UIColor,UIKit.UIColor,UIKit.UIColor)">
            <summary>
            Flattens the <see cref="!:Appracatappra.ActionComponents.ActionTray.ACTrayAppearance"/> to match the new iOS 7 design language
            </summary>
            <param name="backgroundColor">Background color.</param>
            <param name="borderColor">Border color.</param>
            <param name="textColor">Text color.</param>
        </member>
        <member name="T:ActionComponents.ACAlertButtonAppearance.AppearanceModifiedDelegate">
            <summary>
            Occurs when the appearance is modified.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertButtonAppearance.RaiseAppearanceModified">
            <summary>
            Raises the appearance modified event
            </summary>
            <remarks>Used to inform the attached component that an appearance 
            attribute has been modified</remarks>
        </member>
        <member name="T:ActionComponents.ACAlertButtonApperanceType">
            <summary>
            Defines the type of <see cref="T:ActionComponents.ACAlertButtonAppearance"/> being specified 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertButtonApperanceType.Normal">
            <summary>
            The <see cref="T:ActionComponents.ACAlertButtonAppearance"/> that defines the normal state of the
            <see cref="T:ActionComponents.ACAlertButton"/>  
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertButtonApperanceType.Touched">
            <summary>
            The <see cref="T:ActionComponents.ACAlertButtonAppearance"/> that defines the touched state of the
            <see cref="T:ActionComponents.ACAlertButton"/>  
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertButtonApperanceType.Highlighted">
            <summary>
            The <see cref="T:ActionComponents.ACAlertButtonAppearance"/> that defines the highlighted state of the
            <see cref="T:ActionComponents.ACAlertButton"/>  
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertButtonApperanceType.Disabled">
            <summary>
            The <see cref="T:ActionComponents.ACAlertButtonAppearance"/> that defines the disabled state of the
            <see cref="T:ActionComponents.ACAlertButton"/> 
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertDragConstraint">
            <summary>
            Defines the <see cref="T:ActionComponents.ACViewDragConstraintType"/> of constraint placed on the <c>X</c> or <c>Y</c> axis of
            a <see cref="T:ActionComponents.ACView"/> and the optional <c>minimumValue</c> and <c>maximumValue</c> for <c>Constrained</c>
            axis types
            </summary>
            <remarks>Available in ActionPack Business or Enterprise only.</remarks>
        </member>
        <member name="P:ActionComponents.ACAlertDragConstraint.constraintType">
            <summary>
            Gets or sets the <see cref="T:ActionComponents.ACViewDragConstraintType"/> of the
            <see cref="T:ActionComponents.ACView"/> 
            </summary>
            <value>The type of the constraint.</value>
        </member>
        <member name="P:ActionComponents.ACAlertDragConstraint.minimumValue">
            <summary>
            Gets or sets the minimum value that this axis can be moved to if the <see cref="T:ActionComponents.ACViewDragConstraintType"/>
            is <c>Constrained</c>
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:ActionComponents.ACAlertDragConstraint.maximumValue">
            <summary>
            Gets or sets the maximum value that this axis can be moved to if the <see cref="T:ActionComponents.ACViewDragConstraintType"/>
            is <c>Constrained</c>
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="M:ActionComponents.ACAlertDragConstraint.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACViewDragConstraint"/> class.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertDragConstraint.#ctor(ActionComponents.ACAlertDragConstraintType,System.nfloat,System.nfloat)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ActionComponents.ACViewDragConstraint"/> class.
            </summary>
            <param name="constraint">The default <see cref="T:ActionComponents.ACViewDragConstraintType"/> </param>
            <param name="minimum">Minimum axis value</param>
            <param name="maximum">Maximum axis value</param>
        </member>
        <member name="T:ActionComponents.ACAlertDragConstraint.ConstraintChangedDelegate">
            <summary>
            Occurs when a value on this constraint has been changed
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertDragConstraint.RaiseConstraintChanged">
            <summary>
            Raises the constraint changed event
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertDragConstraintType">
            <summary>
            User interface action view drag constraint type.
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertDragConstraintType.None">
            <summary>
            No constraint, this axis can be moved to any position
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertDragConstraintType.Locked">
            <summary>
            This axis is locked to it's current position and cannot be moved
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertDragConstraintType.Constrained">
            <summary>
            This axis is constrained between a <c>minimalValue</c> and <c>maximumValue</c> specified by the user
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertLocation">
            <summary>
            Defines the location that a <see cref="T:ActionComponents.ACAlert"/> will be displayed at. 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertLocation.Top">
            <summary>
            The <see cref="T:ActionComponents.ACAlert"/> will be displayed at the top of the screen 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertLocation.Middle">
            <summary>
            The <see cref="T:ActionComponents.ACAlert"/> will be displayed in the middle of the screen
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertLocation.Bottom">
            <summary>
            The <see cref="T:ActionComponents.ACAlert"/> will be displayed at the bottom of the screen
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertLocation.Custom">
            <summary>
            The <see cref="T:ActionComponents.ACAlert"/> will be displayed initially at the top left corner of the screen
            but can be positioned anywhere via code.
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertOverlay">
            <summary>
            The <see cref="T:ActionComponents.ACAlertOverlay"/> is used to obscure the background for modal
            <see cref="T:ActionComponents.ACAlert"/>s and keep touch events from bubbling down. 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertOverlay.#ctor(ActionComponents.ACAlert)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionComponents.ACAlertOverlay"/> class.
            </summary>
            <param name="alert">Alert.</param>
        </member>
        <member name="M:ActionComponents.ACAlertOverlay.AdjustAppearance">
            <summary>
            Adjusts the appearance.
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertOverlay.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)">
            <Docs>Set containing the touches.</Docs>
            <summary>
            Sent when one or more fingers touches the screen.
            </summary>
            <param name="touches">Touches.</param>
            <param name="evt">Evt.</param>
        </member>
        <member name="T:ActionComponents.ACAlertOverlay.ACAlertOverlayTouchedDelegate">
            <summary>
            Occurs when this <see cref="T:ActionComponents.ACAlertOverlay"/> is touched 
            </summary>
        </member>
        <member name="M:ActionComponents.ACAlertOverlay.RaiseTouched">
            <summary>
            Raises the touched event
            </summary>
        </member>
        <member name="T:ActionComponents.ACAlertType">
            <summary>
            Defines the type of <see cref="T:ActionComponents.ACAlert"/> that will be created and displayed 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertType.Default">
            <summary>
            A standard <see cref="T:ActionComponents.ACAlert"/> that contains an optional <c>title</c>, <c>description</c> and/or <c>icon</c>. The
            alert can also contain one or more <see cref="T:ActionComponents.ACAlertButton"/>s used to interact with the end user 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertType.ActivityAlert">
            <summary>
            Like the <c>Default</c> <see cref="T:ActionComponents.ACAlert"/> but includes an <c>Activity Indicator</c> in place of the 
            optional <c>icon</c>.
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertType.ActivityAlertMedium">
            <summary>
            Displays a medium sized <see cref="T:ActionComponents.ACAlert"/> with an embedded <c>Activity Indicator</c> with an optional title and/or
            <c>Cancel</c> <see cref="T:ActionComponents.ACAlertButton"/> 
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertType.ProgressAlert">
            <summary>
            Like the <c>Default</c> <see cref="T:ActionComponents.ACAlert"/> but includes a <c>Progress Indicator</c>.
            </summary>
        </member>
        <member name="F:ActionComponents.ACAlertType.Subview">
            <summary>
            Allows you to insert a custom subview into the <see cref="T:ActionComponents.ACAlert"/>
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.AutoHyperlink">
            <summary>
            when true, (most) bare plain URLs are auto-hyperlinked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.AutoNewlines">
            <summary>
            when true, RETURN becomes a literal newline  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.EmptyElementSuffix">
            <summary>
            use ">" for HTML output, or " />" for XHTML output
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.EncodeProblemUrlCharacters">
            <summary>
            when true, problematic URL characters like [, ], (, and so forth will be encoded 
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.LinkEmails">
            <summary>
            when false, email addresses will never be auto-linked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.MarkdownOptions.StrictBoldItalic">
            <summary>
            when true, bold and italic require non-word characters on either side  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="T:MarkdownSharp.Markdown">
            <summary>
            Markdown is a text-to-HTML conversion tool for web writers. 
            Markdown allows you to write using an easy-to-read, easy-to-write plain text format, 
            then convert it to structurally valid XHTML (or HTML).
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.#ctor">
            <summary>
            Create a new Markdown instance using default options
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.#ctor(System.Boolean)">
            <summary>
            Create a new Markdown instance and optionally load options from a configuration
            file. There they should be stored in the appSettings section, available options are:
            
                Markdown.StrictBoldItalic (true/false)
                Markdown.EmptyElementSuffix (">" or " />" without the quotes)
                Markdown.LinkEmails (true/false)
                Markdown.AutoNewLines (true/false)
                Markdown.AutoHyperlink (true/false)
                Markdown.EncodeProblemUrlCharacters (true/false) 
                
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.#ctor(MarkdownSharp.MarkdownOptions)">
            <summary>
            Create a new Markdown instance and set the options from the MarkdownOptions object.
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.EmptyElementSuffix">
            <summary>
            use ">" for HTML output, or " />" for XHTML output
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.LinkEmails">
            <summary>
            when false, email addresses will never be auto-linked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.StrictBoldItalic">
            <summary>
            when true, bold and italic require non-word characters on either side  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.AutoNewLines">
            <summary>
            when true, RETURN becomes a literal newline  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.AutoHyperlink">
            <summary>
            when true, (most) bare plain URLs are auto-hyperlinked  
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.EncodeProblemUrlCharacters">
            <summary>
            when true, problematic URL characters like [, ], (, and so forth will be encoded 
            WARNING: this is a significant deviation from the markdown spec
            </summary>
        </member>
        <member name="F:MarkdownSharp.Markdown._nestDepth">
            <summary>
            maximum nested depth of [] and () supported by the transform; implementation detail
            </summary>
        </member>
        <member name="F:MarkdownSharp.Markdown._tabWidth">
            <summary>
            Tabs are automatically converted to spaces as part of the transform  
            this constant determines how "wide" those tabs become in spaces  
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.#cctor">
            <summary>
            In the static constuctor we'll initialize what stays the same across all transforms.
            </summary>
        </member>
        <member name="P:MarkdownSharp.Markdown.Version">
            <summary>
            current version of MarkdownSharp;  
            see http://code.google.com/p/markdownsharp/ for the latest code or to contribute
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.Transform(System.String)">
            <summary>
            Transforms the provided Markdown-formatted text to HTML;  
            see http://en.wikipedia.org/wiki/Markdown
            </summary>
            <remarks>
            The order in which other subs are called here is
            essential. Link and image substitutions need to happen before
            EscapeSpecialChars(), so that any *'s or _'s in the a
            and img tags get encoded.
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.RunBlockGamut(System.String,System.Boolean)">
            <summary>
            Perform transformations that form block-level tags like paragraphs, headers, and list items.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.RunSpanGamut(System.String)">
            <summary>
            Perform transformations that occur *within* block-level tags like paragraphs, headers, and list items.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.FormParagraphs(System.String,System.Boolean)">
            <summary>
            splits on two or more newlines, to form "paragraphs";    
            each paragraph is then unhashed (if it is a hash and unhashing isn't turned off) or wrapped in HTML p tag
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.GetNestedBracketsPattern">
            <summary>
            Reusable pattern to match balanced [brackets]. See Friedl's 
            "Mastering Regular Expressions", 2nd Ed., pp. 328-331.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.GetNestedParensPattern">
            <summary>
            Reusable pattern to match balanced (parens). See Friedl's 
            "Mastering Regular Expressions", 2nd Ed., pp. 328-331.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.StripLinkDefinitions(System.String)">
            <summary>
            Strips link definitions from text, stores the URLs and titles in hash references.
            </summary>
            <remarks>
            ^[id]: url "optional title"
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.GetBlockPattern">
            <summary>
            derived pretty much verbatim from PHP Markdown
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.HashHTMLBlocks(System.String)">
            <summary>
            replaces any block-level HTML blocks with hash entries
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.TokenizeHTML(System.String)">
            <summary>
            returns an array of HTML tokens comprising the input string. Each token is 
            either a tag (possibly with nested, tags contained therein, such 
            as &lt;a href="&lt;MTFoo&gt;"&gt;, or a run of text between tags. Each element of the 
            array is a two-element array; the first is either 'tag' or 'text'; the second is 
            the actual value.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoAnchors(System.String)">
            <summary>
            Turn Markdown link shortcuts into HTML anchor tags
            </summary>
            <remarks>
            [link text](url "title") 
            [link text][id] 
            [id] 
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoImages(System.String)">
            <summary>
            Turn Markdown image shortcuts into HTML img tags. 
            </summary>
            <remarks>
            ![alt text][id]
            ![alt text](url "optional title")
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoHeaders(System.String)">
            <summary>
            Turn Markdown headers into HTML header tags
            </summary>
            <remarks>
            Header 1  
            ========  
            
            Header 2  
            --------  
            
            # Header 1  
            ## Header 2  
            ## Header 2 with closing hashes ##  
            ...  
            ###### Header 6  
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoHorizontalRules(System.String)">
            <summary>
            Turn Markdown horizontal rules into HTML hr tags
            </summary>
            <remarks>
            ***  
            * * *  
            ---
            - - -
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoLists(System.String,System.Boolean)">
            <summary>
            Turn Markdown lists into HTML ul and ol and li tags
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.ProcessListItems(System.String,System.String,System.Boolean)">
            <summary>
            Process the contents of a single ordered or unordered list, splitting it
            into individual list items.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoCodeBlocks(System.String)">
            <summary>
            /// Turn Markdown 4-space indented code into HTML pre code blocks
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoCodeSpans(System.String)">
            <summary>
            Turn Markdown `code spans` into HTML code tags
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoItalicsAndBold(System.String)">
            <summary>
            Turn Markdown *italics* and **bold** into HTML strong and em tags
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoHardBreaks(System.String)">
            <summary>
            Turn markdown line breaks (two space at end of line) into HTML break tags
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoBlockQuotes(System.String)">
            <summary>
            Turn Markdown > quoted blocks into HTML blockquote blocks
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.DoAutoLinks(System.String)">
            <summary>
            Turn angle-delimited URLs into HTML anchor tags
            </summary>
            <remarks>
            &lt;http://www.example.com&gt;
            </remarks>
        </member>
        <member name="M:MarkdownSharp.Markdown.Outdent(System.String)">
            <summary>
            Remove one level of line-leading spaces
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EncodeEmailAddress(System.String)">
            <summary>
            encodes email address randomly  
            roughly 10% raw, 45% hex, 45% dec 
            note that @ is always encoded and : never is
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EncodeCode(System.String)">
            <summary>
            Encode/escape certain Markdown characters inside code blocks and spans where they are literals
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EncodeAmpsAndAngles(System.String)">
            <summary>
            Encode any ampersands (that aren't part of an HTML entity) and left or right angle brackets
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EscapeBackslashes(System.String)">
            <summary>
            Encodes any escaped characters such as \`, \*, \[ etc
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.Unescape(System.String)">
            <summary>
            swap back in all the special characters we've hidden
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EscapeBoldItalic(System.String)">
            <summary>
            escapes Bold [ * ] and Italic [ _ ] characters
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EncodeProblemUrlChars(System.String)">
            <summary>
            hex-encodes some unusual "problem" chars in URLs to avoid URL detection problems 
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.EscapeSpecialCharsWithinTagAttributes(System.String)">
            <summary>
            Within tags -- meaning between &lt; and &gt; -- encode [\ ` * _] so they 
            don't conflict with their use in Markdown for code, italics and strong. 
            We're replacing each such character with its corresponding hash 
            value; this is likely overkill, but it should prevent us from colliding 
            with the escape values by accident.
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.Normalize(System.String)">
            <summary>
            convert all tabs to _tabWidth spaces; 
            standardizes line endings from DOS (CR LF) or Mac (CR) to UNIX (LF); 
            makes sure text ends with a couple of newlines; 
            removes any blank lines (only spaces) in the text
            </summary>
        </member>
        <member name="M:MarkdownSharp.Markdown.RepeatString(System.String,System.Int32)">
            <summary>
            this is to emulate what's evailable in PHP
            </summary>
        </member>
    </members>
</doc>
